<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:TalendMetadata="http://www.talend.org/metadata/connection/2010" xmlns:dataquality.analysis="http://dataquality.analysis" xmlns:dataquality.domain="http://dataquality.domain" xmlns:dataquality.indicators="http://dataquality.indicators" xmlns:dataquality.reports="http://dataquality.reports" xmlns:orgomg.cwm.objectmodel.core="http:///orgomg/cwm/objectmodel/core.ecore" xmlns:relational="http://www.talend.org/cwm/resource/relational/2010">
  <dataquality.analysis:Analysis xmi:id="_Y_x-MOKvEe6ilNAKM5u3Mg" name="col_analysis" supplierDependency="_b0oZgOKxEe6ilNAKM5u3Mg" creationDate="2024-03-15T15:05:40.948+0530" defaultContext="Default">
    <clientDependency href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_lzbP0OKvEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/address/BE_Code_postal_0.1.pattern#_WK0GyOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/address/DE_Postleitzahl__postal_code__0.1.pattern#_WK-e2OKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/address/FR_Code_postal_0.1.pattern#_WLGaqOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/address/Postal_code_or_Pin_code_of_India_0.1.pattern#_WLOWeOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/address/FR_Insee_Code_0.1.pattern#_WLW5UOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/address/Swiss_Zip_Code_validation_0.1.pattern#_WLe1KOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/address/US_State_Codes_0.1.pattern#_WLn_GOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/address/US_Zipcode_Validation_0.1.pattern#_WLwh-OKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/address/Valid_UK_Post_Codes_Upper_and_Lower_Case_0.1.pattern#_WL4dyOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/color/Hex_Color_Codes_0.1.pattern#_WMAZmOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/currency/EN_Amount_Money_0.1.pattern#_WMLYuOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/currency/FR_Amount_Money_0.1.pattern#_WMWX2OKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/customer/Bulgaria_Vat_Number_0.1.pattern#_WMeTqOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/customer/Gender_0.1.pattern#_WMoEoOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/date/24_Hour_Time_0.1.pattern#_WMxOmOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/date/EN_Month_0.1.pattern#_WM80wOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/date/Month_0.1.pattern#_WNEwkOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/internet/Email_Address_0.1.pattern#_WNMFVOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/date/ISO_Date_0.1.pattern#_WNXrgOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/date/EN_Month_Abbrev_0.1.pattern#_WNjRsOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/customer/French_VATNumber_0.1.pattern#_WTAZcOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/customer/SEDOL_0.1.pattern#_WTs9AOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/date/Current_Century_Date_0.1.pattern#_WUVPIOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/internet/IP_Address_0.1.pattern#_WVshEOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/internet/IPv6_Address_0.1.pattern#_WWBRMOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/internet/MAC_Address_0.1.pattern#_WWTlEOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/American_Express_Card_Number_0.1.pattern#_WWhAcOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/Bank_Routing_Transit_Number__RTN__0.1.pattern#_WWub0OKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/Contains_numbers_0.1.pattern#_WW7QIOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/FR_SSN_0.1.pattern#_WXGPQOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/GPS_Coordinate_0.1.pattern#_WXR1cOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/ISBN_13_Checker_0.1.pattern#_WXeCsOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/ISBN_Checker_0.1.pattern#_WXpB0OKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/International_Passport_0.1.pattern#_WX3EQOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/Istat_Code_0.1.pattern#_WYDRgOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/Longitude_Validation_0.1.pattern#_WYQs4OKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/Master_Card_Number_0.1.pattern#_WYevUOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/Non_Zero_1st_Digit_0.1.pattern#_WYsKsOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/Numeric_0.1.pattern#_WY-ekOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/UK_SSN_0.1.pattern#_WZQycOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/UK_Vehicle_Registration_Plate_Number_Plate_0.1.pattern#_WZgDAOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/number/US_SSN_0.1.pattern#_WZyW4OKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/phone/FR_Phone_Number_0.1.pattern#_WaAZUOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/phone/FR_Phone_Number__Local_or_International___0.1.pattern#_WaPp4OKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/phone/International_phone_number_0.1.pattern#_WabQEOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/phone/Mobile_number_of_India_0.1.pattern#_Wam2QOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/phone/Phone_Brazil_0.1.pattern#_WazDgOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/phone/Phone_Number_0.1.pattern#_Wa_QwOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/Blank_text_0.1.pattern#_WbK28OKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/Empty_text_0.1.pattern#_WbaHgOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/Home_Row_Text_0.1.pattern#_Wbm70OKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/Linux_Path_Verify_0.1.pattern#_WbyiAOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/No_special_chart_0.1.pattern#_Wb-vQOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/Random_sequence_of_text_0.1.pattern#_WcQcEOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/Starts_with_blank_0.1.pattern#_WclzQOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/Starts_with_space_0.1.pattern#_Wc4uMOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/Starts_with_uppercase_0.1.pattern#_WdDtUOKwEe6ilNAKM5u3Mg"/>
    <clientDependency href="../../../TDQ_Libraries/Patterns/Regex/text/Uppercased_Single_Word_0.1.pattern#_WdP6kOKwEe6ilNAKM5u3Mg"/>
    <taggedValue xmi:id="_Y_x-MeKvEe6ilNAKM5u3Mg" tag="Status" value="development"/>
    <taggedValue xmi:id="_Y_x-MuKvEe6ilNAKM5u3Mg" tag="Author" value="deepak_dm@qlik.com"/>
    <taggedValue xmi:id="_Y_x-M-KvEe6ilNAKM5u3Mg" tag="Purpose" value=""/>
    <taggedValue xmi:id="_Y_x-NOKvEe6ilNAKM5u3Mg" tag="Description" value=""/>
    <taggedValue xmi:id="_Y_x-NeKvEe6ilNAKM5u3Mg" tag="Version" value="0.1"/>
    <taggedValue xmi:id="_lzaoweKvEe6ilNAKM5u3Mg" tag="ANA_LAST_RUN_CONTEXT" value="Default"/>
    <taggedValue xmi:id="_lzaowuKvEe6ilNAKM5u3Mg" tag="PREVIEW_ROW_NUMBER" value="50"/>
    <taggedValue xmi:id="_lzaow-KvEe6ilNAKM5u3Mg" tag="NUMBER_OF_CONNECTIONS_PER_ANALYSIS" value="5"/>
    <taggedValue xmi:id="_lzbP1uKvEe6ilNAKM5u3Mg" tag="Is Use Sample Data" value="false"/>
    <context xmi:id="_Y_x-NuKvEe6ilNAKM5u3Mg">
      <connection href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR4OKvEe6ilNAKM5u3Mg"/>
      <analysedElements xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
      <analysedElements xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
      <analysedElements xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
      <analysedElements xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
      <analysedElements xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
    </context>
    <results xmi:id="_Y_x-N-KvEe6ilNAKM5u3Mg">
      <resultMetadata xmi:id="_Y_x-OOKvEe6ilNAKM5u3Mg" executionDate="2024-03-15T15:28:21.114+0530" executionDuration="939" message="" executionNumber="4" lastRunOk="true" lastExecutionNumberOk="4"/>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_WBRwQOKwEe6ilNAKM5u3Mg" count="500" computed="true">
        <parameters xmi:id="_WBRwQeKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fTqhoOKwEe6ilNAKM5u3Mg" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_fTqhoeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_fTqhouKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_fTqho-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_WBRwQuKwEe6ilNAKM5u3Mg" count="500" computed="true">
        <parameters xmi:id="_WBRwQ-KwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <builtInIndicatorDefinition xmi:id="_fT5LIOKwEe6ilNAKM5u3Mg" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_fT5LIeKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_fT5LIuKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_fT5LI-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_WBRwROKwEe6ilNAKM5u3Mg" count="500" computed="true" distinctValueCount="500">
        <parameters xmi:id="_WBRwReKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fUGmgOKwEe6ilNAKM5u3Mg" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_fUGmgeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_fUGmguKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_fUGmg-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_WBRwRuKwEe6ilNAKM5u3Mg" count="500" computed="true" uniqueValueCount="500">
        <parameters xmi:id="_WBRwR-KwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fURloOKwEe6ilNAKM5u3Mg" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_fURloeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_fURlouKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_fURlo-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_fURlpOKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_fURlpeKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fURlpuKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fURlp-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fURlqOKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fURlqeKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_WBRwSOKwEe6ilNAKM5u3Mg" count="500" computed="true" duplicateValueCount="0">
        <parameters xmi:id="_WBRwSeKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fUeZ8OKwEe6ilNAKM5u3Mg" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_fUeZ8eKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_fUeZ8uKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_fUeZ8-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_fUeZ9OKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_fUeZ9eKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fUeZ9uKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fUeZ9-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fUeZ-OKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fUeZ-eKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_WBRwSuKwEe6ilNAKM5u3Mg" count="500" computed="true">
        <parameters xmi:id="_WBRwS-KwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fUtDcOKwEe6ilNAKM5u3Mg" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_fUtDceKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_fUtDcuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_fUtDc-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fUtDdOKwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fUtDdeKwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fUtDduKwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fUtDd-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthIndicator" xmi:id="_WBRwTOKwEe6ilNAKM5u3Mg" count="500" computed="true" length="5">
        <parameters xmi:id="_WBRwTeKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBRwTuKwEe6ilNAKM5u3Mg" useBlank="false"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fU20cOKwEe6ilNAKM5u3Mg" name="Minimal Length" label="Minimal Length">
          <taggedValue xmi:id="_fU20ceKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field. Does not take into account the null and blank values when computing the minimal length."/>
          <taggedValue xmi:id="_fU20cuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record of non-null and non-blank values"/>
          <sqlGenericExpression xmi:id="_fU20c-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fU20dOKwEe6ilNAKM5u3Mg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fU20deKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fU20duKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fU20d-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fU20eOKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fU20eeKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fU20euKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fU20e-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fU20fOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fU20feKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fU20fuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fU20f-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthWithNullIndicator" xmi:id="_WBRwT-KwEe6ilNAKM5u3Mg" count="500" computed="true" length="5">
        <parameters xmi:id="_WBRwUOKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBRwUeKwEe6ilNAKM5u3Mg" useBlank="false" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
        <builtInIndicatorDefinition xmi:id="_fVDowOKwEe6ilNAKM5u3Mg" name="Minimal Length With Null" label="Minimal Length With Null">
          <taggedValue xmi:id="_fVDoweKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field. Does not take into account the blank values when computing the minimal length."/>
          <taggedValue xmi:id="_fVDowuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record of non-blank values"/>
          <sqlGenericExpression xmi:id="_fVDow-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fVDoxOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fVDoxeKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fVDoxuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fVDox-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fVDoyOKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fVDoyeKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fVDoyuKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fVDoy-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fVDozOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fVDozeKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fVDozuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fVDoz-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthWithBlankIndicator" xmi:id="_WBRwUuKwEe6ilNAKM5u3Mg" count="500" computed="true" length="5">
        <parameters xmi:id="_WBRwU-KwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBRwVOKwEe6ilNAKM5u3Mg"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
        <builtInIndicatorDefinition xmi:id="_fVTgYOKwEe6ilNAKM5u3Mg" name="Minimal Length With Blank" label="Minimal Length With Blank">
          <taggedValue xmi:id="_fVTgYeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
          <taggedValue xmi:id="_fVTgYuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record of non-null values"/>
          <sqlGenericExpression xmi:id="_fVTgY-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fVTgZOKwEe6ilNAKM5u3Mg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fVTgZeKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fVTgZuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fVTgZ-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fVTgaOKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fVTgaeKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fVTgauKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fVTga-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fVTgbOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fVTgbeKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fVTgbuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthIndicator" xmi:id="_WBRwVeKwEe6ilNAKM5u3Mg" count="500" computed="true" length="31">
        <parameters xmi:id="_WBRwVuKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBRwV-KwEe6ilNAKM5u3Mg" useBlank="false"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fViJ4OKwEe6ilNAKM5u3Mg" name="Maximal Length" label="Maximal Length">
          <taggedValue xmi:id="_fViJ4eKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field. Does not take into account the null and blank values when computing the maximal length."/>
          <taggedValue xmi:id="_fViJ4uKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record of non-null and non-blank values"/>
          <sqlGenericExpression xmi:id="_fViJ4-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fViJ5OKwEe6ilNAKM5u3Mg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
          <sqlGenericExpression xmi:id="_fViJ5eKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fViJ5uKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fViJ5-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fViJ6OKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
          <sqlGenericExpression xmi:id="_fViJ6eKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fViJ6uKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fViJ6-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fViJ7OKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fViJ7eKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fViJ7uKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fViJ7-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthWithBlankNullIndicator" xmi:id="_WBRwWOKwEe6ilNAKM5u3Mg" count="500" computed="true" length="5">
        <parameters xmi:id="_WBRwWeKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBRwWuKwEe6ilNAKM5u3Mg" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fV1E0OKwEe6ilNAKM5u3Mg" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
          <taggedValue xmi:id="_fV1E0eKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field."/>
          <taggedValue xmi:id="_fV1E0uKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
          <sqlGenericExpression xmi:id="_fV1E0-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fV1E1OKwEe6ilNAKM5u3Mg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fV1E1eKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fV1E1uKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fV1E1-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fV1E2OKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fV1E2eKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fV1E2uKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fV1E2-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fV1E3OKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fV1E3eKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fV1E3uKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fV1E3-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthWithNullIndicator" xmi:id="_WBRwW-KwEe6ilNAKM5u3Mg" count="500" computed="true" length="31">
        <parameters xmi:id="_WBRwXOKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBRwXeKwEe6ilNAKM5u3Mg" useBlank="false" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fWGxoOKwEe6ilNAKM5u3Mg" name="Maximal Length With Null" label="Maximal Length With Null">
          <taggedValue xmi:id="_fWGxoeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field. Does not take into account the blank values when computing the maximal length."/>
          <taggedValue xmi:id="_fWGxouKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record of non-blank values"/>
          <sqlGenericExpression xmi:id="_fWGxo-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fWGxpOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fWGxpeKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fWGxpuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fWGxp-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fWGxqOKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
          <sqlGenericExpression xmi:id="_fWGxqeKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fWGxquKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fWGxq-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fWGxrOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fWGxreKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fWGxruKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fWGxr-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthWithBlankIndicator" xmi:id="_WBRwXuKwEe6ilNAKM5u3Mg" count="500" computed="true" length="31">
        <parameters xmi:id="_WBRwX-KwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBRwYOKwEe6ilNAKM5u3Mg"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fWXQUOKwEe6ilNAKM5u3Mg" name="Maximal Length With Blank" label="Maximal Length With Blank">
          <taggedValue xmi:id="_fWXQUeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field. Does not take into account the null values when computing the maximal length."/>
          <taggedValue xmi:id="_fWXQUuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record of non-null values"/>
          <sqlGenericExpression xmi:id="_fWXQU-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fWXQVOKwEe6ilNAKM5u3Mg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fWXQVeKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fWXQVuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fWXQV-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fWXQWOKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fWXQWeKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fWXQWuKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fWXQW-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fWXQXOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fWXQXeKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fWXQXuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AverageLengthIndicator" xmi:id="_WBRwYeKwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="8157.0">
        <parameters xmi:id="_WBRwYuKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBRwY-KwEe6ilNAKM5u3Mg" useBlank="false"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fWkrsOKwEe6ilNAKM5u3Mg" name="Average Length" label="Average Length">
          <taggedValue xmi:id="_fWkrseKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field. Does not take into account the null and blank values when computing the average length."/>
          <taggedValue xmi:id="_fWkrsuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record of non-null and non-blank values"/>
          <sqlGenericExpression xmi:id="_fWkrs-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fWkrtOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fWkrteKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fWkrtuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fWkrt-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fWkruOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fWkrueKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fWkruuKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fWkru-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fWkrvOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fWkrveKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fWkrvuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fWkrv-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthWithBlankNullIndicator" xmi:id="_WBRwZOKwEe6ilNAKM5u3Mg" count="500" computed="true" length="31">
        <parameters xmi:id="_WBRwZeKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBRwZuKwEe6ilNAKM5u3Mg" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fW2_kOKwEe6ilNAKM5u3Mg" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
          <taggedValue xmi:id="_fW2_keKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field."/>
          <taggedValue xmi:id="_fW2_kuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record"/>
          <sqlGenericExpression xmi:id="_fW2_k-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fW2_lOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fW2_leKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fW2_luKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fW2_l-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fW2_mOKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fW2_meKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fW2_muKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fW2_m-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fW2_nOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fW2_neKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fW2_nuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fW2_n-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AvgLengthWithNullIndicator" xmi:id="_WBRwZ-KwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="8157.0">
        <parameters xmi:id="_WBRwaOKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBRwaeKwEe6ilNAKM5u3Mg" useBlank="false" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fXJTcOKwEe6ilNAKM5u3Mg" name="Average Length With Null" label="Average Length With Null">
          <taggedValue xmi:id="_fXJTceKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field. Does not take into account the blank values when computing the average length."/>
          <taggedValue xmi:id="_fXJTcuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record of non-blank values"/>
          <sqlGenericExpression xmi:id="_fXJTc-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fXJTdOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fXJTdeKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fXJTduKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fXJTd-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fXJTeOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fXJTeeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fXJTeuKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fXJTe-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fXJTfOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fXJTfeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fXJTfuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fXJTf-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AvgLengthWithBlankIndicator" xmi:id="_WBRwauKwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="8157.0">
        <parameters xmi:id="_WBRwa-KwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBRwbOKwEe6ilNAKM5u3Mg"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fXU5oOKwEe6ilNAKM5u3Mg" name="Average Length With Blank" label="Average Length With Blank">
          <taggedValue xmi:id="_fXU5oeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average length."/>
          <taggedValue xmi:id="_fXU5ouKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record of non-null values"/>
          <sqlGenericExpression xmi:id="_fXU5o-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fXU5pOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fXU5peKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fXU5puKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fXU5p-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fXU5qOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fXU5qeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fXU5quKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fXU5q-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fXU5rOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fXU5reKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fXU5ruKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AvgLengthWithBlankNullIndicator" xmi:id="_WBRwbeKwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="8157.0">
        <parameters xmi:id="_WBRwbuKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBRwb-KwEe6ilNAKM5u3Mg" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fXiVAOKwEe6ilNAKM5u3Mg" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
          <taggedValue xmi:id="_fXiVAeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field."/>
          <taggedValue xmi:id="_fXiVAuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record"/>
          <sqlGenericExpression xmi:id="_fXiVA-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fXiVBOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fXiVBeKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fXiVBuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fXiVB-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fXiVCOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fXiVCeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fXiVCuKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fXiVC-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fXiVDOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fXiVDeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fXiVDuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fXiVD-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexFreqIndicator" xmi:id="_WBX24OKwEe6ilNAKM5u3Mg" count="500" computed="true" distinctValueCount="10" uniqueValueCount="500" valueToFreqvalueToDistinctFreq
        <parameters xmi:id="_WBX24eKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Frequency_Table_0.1.definition#_VGep4Pa7Ed24-N3PsP_o-w"/>
        <builtInIndicatorDefinition xmi:id="_fXzawOKwEe6ilNAKM5u3Mg" name="Soundex Frequency Table" label="Soundex Frequency Table">
          <taggedValue xmi:id="_fXzaweKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="_fXzawuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="_fXzaw-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_fXzaxOKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_fXzaxeKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fXzaxuKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>),  COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) DESC , COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fXzax-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_fXzayOKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fXzayeKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fXzayuKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_fXzay-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexLowFreqIndicator" xmi:id="_WBX24uKwEe6ilNAKM5u3Mg" count="500" computed="true" distinctValueCount="10" uniqueValueCount="500" valueToFreqvalueToDistinctFreq
        <parameters xmi:id="_WBX24-KwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Low_Frequency_Table_0.1.definition#_AjKIEPbBEd24-N3PsP_o-w"/>
        <builtInIndicatorDefinition xmi:id="_fX-Z4OKwEe6ilNAKM5u3Mg" name="Soundex Low Frequency Table" label="Soundex Low Frequency Table">
          <taggedValue xmi:id="_fX-Z4eKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="_fX-Z4uKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="_fX-Z4-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="SQL"/>
          <sqlGenericExpression xmi:id="_fX-Z5OKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d,c ASC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_fX-Z5eKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fX-Z5uKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>), COUNT(*) ASC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fX-Z5-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="DB2"/>
          <sqlGenericExpression xmi:id="_fX-Z6OKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fX-Z6eKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fX-Z6uKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) AS c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) AS d FROM &lt;%=__TABLE_NAME__%> AS t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Informix"/>
          <sqlGenericExpression xmi:id="_fX-Z6-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY NYSIIS(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX25OKwEe6ilNAKM5u3Mg" name="BE Code postal" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX25eKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX25uKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/BE_Code_postal_0.1.pattern#_NwUnsD4LEd20H7qFpzB9dg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX25-KwEe6ilNAKM5u3Mg" name="DE Postleitzahl (postal code)" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX26OKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX26eKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/DE_Postleitzahl__postal_code__0.1.pattern#_rK7EgD4LEd20H7qFpzB9dg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX26uKwEe6ilNAKM5u3Mg" name="FR Code postal" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX26-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX27OKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/FR_Code_postal_0.1.pattern#_EJ_moD4LEd20H7qFpzB9dg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX27eKwEe6ilNAKM5u3Mg" name="Postal code or Pin code of India" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX27uKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX27-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/Postal_code_or_Pin_code_of_India_0.1.pattern#_Ego7UIygEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX28OKwEe6ilNAKM5u3Mg" name="FR Insee Code" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX28eKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX28uKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/FR_Insee_Code_0.1.pattern#_wXkbQEChEeWDcpMk51Q9_w"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX28-KwEe6ilNAKM5u3Mg" name="Swiss Zip Code validation" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX29OKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX29eKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/Swiss_Zip_Code_validation_0.1.pattern#__GBswIyfEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX29uKwEe6ilNAKM5u3Mg" name="US State Codes" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX29-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX2-OKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/US_State_Codes_0.1.pattern#_pWgP8LkgEeSVYtNTxh_-xg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX2-eKwEe6ilNAKM5u3Mg" name="US Zipcode Validation" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX2-uKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX2--KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/US_Zipcode_Validation_0.1.pattern#_n2tqUIybEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX2_OKwEe6ilNAKM5u3Mg" name="Valid UK Post Codes Upper and Lower Case" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX2_eKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX2_uKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/Valid_UK_Post_Codes_Upper_and_Lower_Case_0.1.pattern#_fi29wIybEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX2_-KwEe6ilNAKM5u3Mg" name="Hex Color Codes" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3AOKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3AeKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/color/Hex_Color_Codes_0.1.pattern#_ly9QgcBQEd2Zap05uF3mKA"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3AuKwEe6ilNAKM5u3Mg" name="EN Amount Money" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3A-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3BOKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/currency/EN_Amount_Money_0.1.pattern#_TTN-cEClEeWDcpMk51Q9_w"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3BeKwEe6ilNAKM5u3Mg" name="FR Amount Money" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3BuKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3B-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/currency/FR_Amount_Money_0.1.pattern#_MKEKcEClEeWDcpMk51Q9_w"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3COKwEe6ilNAKM5u3Mg" name="Bulgaria Vat Number" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3CeKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3CuKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/customer/Bulgaria_Vat_Number_0.1.pattern#_b95-YIydEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3C-KwEe6ilNAKM5u3Mg" name="Gender" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3DOKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3DeKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/customer/Gender_0.1.pattern#_TXHDQceCEd2zV_ZhgRMOzA"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3DuKwEe6ilNAKM5u3Mg" name="24 Hour Time" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3D-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3EOKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/24_Hour_Time_0.1.pattern#_nj3TsD4KEd20H7qFpzB9dg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3EeKwEe6ilNAKM5u3Mg" name="EN Month" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3EuKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3E-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/EN_Month_0.1.pattern#_cfceoEC_EeWBxNQvuPBQ-Q"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3FOKwEe6ilNAKM5u3Mg" name="Month" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3FeKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3FuKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/Month_0.1.pattern#_ZNaNsD4ZEd24WPpU35gV1A"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3F-KwEe6ilNAKM5u3Mg" name="Email Address" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3GOKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3GeKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/internet/Email_Address_0.1.pattern#_rC5TcD4XEd24WPpU35gV1A"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3GuKwEe6ilNAKM5u3Mg" name="ISO Date" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3G-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3HOKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/ISO_Date_0.1.pattern#_M4zogD4ZEd24WPpU35gV1A"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3HeKwEe6ilNAKM5u3Mg" name="EN Month Abbrev" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3HuKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3H-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/EN_Month_Abbrev_0.1.pattern#_T8ZfgEC_EeWBxNQvuPBQ-Q"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_WBX3IOKwEe6ilNAKM5u3Mg" count="500" computed="true">
        <parameters xmi:id="_WBX3IeKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fYNDYOKwEe6ilNAKM5u3Mg" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_fYNDYeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_fYNDYuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_fYNDY-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_WBX3IuKwEe6ilNAKM5u3Mg" count="500" computed="true">
        <parameters xmi:id="_WBX3I-KwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <builtInIndicatorDefinition xmi:id="_fYZQoOKwEe6ilNAKM5u3Mg" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_fYZQoeKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_fYZQouKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_fYZQo-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_WBX3JOKwEe6ilNAKM5u3Mg" count="500" computed="true" distinctValueCount="342">
        <parameters xmi:id="_WBX3JeKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fYld4OKwEe6ilNAKM5u3Mg" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_fYld4eKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_fYld4uKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_fYld4-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_WBX3JuKwEe6ilNAKM5u3Mg" count="500" computed="true" uniqueValueCount="262">
        <parameters xmi:id="_WBX3J-KwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fYy5QOKwEe6ilNAKM5u3Mg" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_fYy5QeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_fYy5QuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_fYy5Q-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_fYy5ROKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_fYy5ReKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fYy5RuKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fYy5R-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fYy5SOKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fYy5SeKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_WBX3KOKwEe6ilNAKM5u3Mg" count="500" computed="true" duplicateValueCount="80">
        <parameters xmi:id="_WBX3KeKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fY94YOKwEe6ilNAKM5u3Mg" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_fY94YeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_fY94YuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_fY94Y-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_fY94ZOKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_fY94ZeKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fY94ZuKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fY94Z-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fY94aOKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fY94aeKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_WBX3KuKwEe6ilNAKM5u3Mg" count="500" computed="true">
        <parameters xmi:id="_WBX3K-KwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fZIQcOKwEe6ilNAKM5u3Mg" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_fZIQceKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_fZIQcuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_fZIQc-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fZIQdOKwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fZIQdeKwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fZIQduKwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fZIQd-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthIndicator" xmi:id="_WBX3LOKwEe6ilNAKM5u3Mg" count="500" computed="true" length="4">
        <parameters xmi:id="_WBX3LeKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3LuKwEe6ilNAKM5u3Mg" useBlank="false"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fZTPkOKwEe6ilNAKM5u3Mg" name="Minimal Length" label="Minimal Length">
          <taggedValue xmi:id="_fZTPkeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field. Does not take into account the null and blank values when computing the minimal length."/>
          <taggedValue xmi:id="_fZTPkuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record of non-null and non-blank values"/>
          <sqlGenericExpression xmi:id="_fZTPk-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fZTPlOKwEe6ilNAKM5u3Mg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fZTPleKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fZTPluKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fZTPl-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fZTPmOKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fZTPmeKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fZTPmuKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fZTPm-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fZTPnOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fZTPneKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fZTPnuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fZTPn-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthWithNullIndicator" xmi:id="_WBX3L-KwEe6ilNAKM5u3Mg" count="500" computed="true" length="4">
        <parameters xmi:id="_WBX3MOKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3MeKwEe6ilNAKM5u3Mg" useBlank="false" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
        <builtInIndicatorDefinition xmi:id="_fZdnoOKwEe6ilNAKM5u3Mg" name="Minimal Length With Null" label="Minimal Length With Null">
          <taggedValue xmi:id="_fZdnoeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field. Does not take into account the blank values when computing the minimal length."/>
          <taggedValue xmi:id="_fZdnouKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record of non-blank values"/>
          <sqlGenericExpression xmi:id="_fZdno-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fZdnpOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fZdnpeKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fZdnpuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fZdnp-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fZdnqOKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fZdnqeKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fZdnquKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fZdnq-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fZdnrOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fZdnreKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fZdnruKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fZdnr-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthWithBlankIndicator" xmi:id="_WBX3MuKwEe6ilNAKM5u3Mg" count="500" computed="true" length="4">
        <parameters xmi:id="_WBX3M-KwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3NOKwEe6ilNAKM5u3Mg"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
        <builtInIndicatorDefinition xmi:id="_fZpN0OKwEe6ilNAKM5u3Mg" name="Minimal Length With Blank" label="Minimal Length With Blank">
          <taggedValue xmi:id="_fZpN0eKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
          <taggedValue xmi:id="_fZpN0uKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record of non-null values"/>
          <sqlGenericExpression xmi:id="_fZpN0-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fZpN1OKwEe6ilNAKM5u3Mg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fZpN1eKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fZpN1uKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fZpN1-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fZpN2OKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fZpN2eKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fZpN2uKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fZpN2-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fZpN3OKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fZpN3eKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fZpN3uKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthIndicator" xmi:id="_WBX3NeKwEe6ilNAKM5u3Mg" count="500" computed="true" length="19">
        <parameters xmi:id="_WBX3NuKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3N-KwEe6ilNAKM5u3Mg" useBlank="false"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fZ0M8OKwEe6ilNAKM5u3Mg" name="Maximal Length" label="Maximal Length">
          <taggedValue xmi:id="_fZ0M8eKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field. Does not take into account the null and blank values when computing the maximal length."/>
          <taggedValue xmi:id="_fZ0M8uKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record of non-null and non-blank values"/>
          <sqlGenericExpression xmi:id="_fZ0M8-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fZ0M9OKwEe6ilNAKM5u3Mg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
          <sqlGenericExpression xmi:id="_fZ0M9eKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fZ0M9uKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fZ0M9-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fZ0M-OKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
          <sqlGenericExpression xmi:id="_fZ0M-eKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fZ0M-uKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fZ0M--KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fZ0M_OKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fZ0M_eKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fZ0M_uKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fZ0M_-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthWithBlankNullIndicator" xmi:id="_WBX3OOKwEe6ilNAKM5u3Mg" count="500" computed="true" length="4">
        <parameters xmi:id="_WBX3OeKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3OuKwEe6ilNAKM5u3Mg" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fZ_zIOKwEe6ilNAKM5u3Mg" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
          <taggedValue xmi:id="_fZ_zIeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field."/>
          <taggedValue xmi:id="_fZ_zIuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
          <sqlGenericExpression xmi:id="_fZ_zI-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fZ_zJOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fZ_zJeKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fZ_zJuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fZ_zJ-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fZ_zKOKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fZ_zKeKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fZ_zKuKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fZ_zK-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fZ_zLOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fZ_zLeKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fZ_zLuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fZ_zL-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthWithNullIndicator" xmi:id="_WBX3O-KwEe6ilNAKM5u3Mg" count="500" computed="true" length="19">
        <parameters xmi:id="_WBX3POKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3PeKwEe6ilNAKM5u3Mg" useBlank="false" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_faJkIOKwEe6ilNAKM5u3Mg" name="Maximal Length With Null" label="Maximal Length With Null">
          <taggedValue xmi:id="_faJkIeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field. Does not take into account the blank values when computing the maximal length."/>
          <taggedValue xmi:id="_faJkIuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record of non-blank values"/>
          <sqlGenericExpression xmi:id="_faJkI-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_faJkJOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_faJkJeKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_faJkJuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_faJkJ-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_faJkKOKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
          <sqlGenericExpression xmi:id="_faJkKeKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_faJkKuKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_faJkK-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_faJkLOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_faJkLeKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_faJkLuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_faJkL-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthWithBlankIndicator" xmi:id="_WBX3PuKwEe6ilNAKM5u3Mg" count="500" computed="true" length="19">
        <parameters xmi:id="_WBX3P-KwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3QOKwEe6ilNAKM5u3Mg"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_faVxYOKwEe6ilNAKM5u3Mg" name="Maximal Length With Blank" label="Maximal Length With Blank">
          <taggedValue xmi:id="_faVxYeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field. Does not take into account the null values when computing the maximal length."/>
          <taggedValue xmi:id="_faVxYuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record of non-null values"/>
          <sqlGenericExpression xmi:id="_faVxY-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_faVxZOKwEe6ilNAKM5u3Mg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_faVxZeKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_faVxZuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_faVxZ-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_faVxaOKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_faVxaeKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_faVxauKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_faVxa-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_faVxbOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_faVxbeKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_faVxbuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AverageLengthIndicator" xmi:id="_WBX3QeKwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="4376.0">
        <parameters xmi:id="_WBX3QuKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3Q-KwEe6ilNAKM5u3Mg" useBlank="false"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fah-oOKwEe6ilNAKM5u3Mg" name="Average Length" label="Average Length">
          <taggedValue xmi:id="_fah-oeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field. Does not take into account the null and blank values when computing the average length."/>
          <taggedValue xmi:id="_fah-ouKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record of non-null and non-blank values"/>
          <sqlGenericExpression xmi:id="_fah-o-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fah-pOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fah-peKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fah-puKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fah-p-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fah-qOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fah-qeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fah-quKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fah-q-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fah-rOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fah-reKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fah-ruKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fah-r-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthWithBlankNullIndicator" xmi:id="_WBX3ROKwEe6ilNAKM5u3Mg" count="500" computed="true" length="19">
        <parameters xmi:id="_WBX3ReKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3RuKwEe6ilNAKM5u3Mg" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fasWsOKwEe6ilNAKM5u3Mg" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
          <taggedValue xmi:id="_fasWseKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field."/>
          <taggedValue xmi:id="_fasWsuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record"/>
          <sqlGenericExpression xmi:id="_fasWs-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fasWtOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fasWteKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fasWtuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fasWt-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fasWuOKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fasWueKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fasWuuKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fasWu-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fasWvOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fasWveKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fasWvuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fasWv-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AvgLengthWithNullIndicator" xmi:id="_WBX3R-KwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="4376.0">
        <parameters xmi:id="_WBX3SOKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3SeKwEe6ilNAKM5u3Mg" useBlank="false" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fa8OUOKwEe6ilNAKM5u3Mg" name="Average Length With Null" label="Average Length With Null">
          <taggedValue xmi:id="_fa8OUeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field. Does not take into account the blank values when computing the average length."/>
          <taggedValue xmi:id="_fa8OUuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record of non-blank values"/>
          <sqlGenericExpression xmi:id="_fa8OU-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fa8OVOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fa8OVeKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fa8OVuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fa8OV-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fa8OWOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fa8OWeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fa8OWuKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fa8OW-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fa8OXOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fa8OXeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fa8OXuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fa8OX-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AvgLengthWithBlankIndicator" xmi:id="_WBX3SuKwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="4376.0">
        <parameters xmi:id="_WBX3S-KwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3TOKwEe6ilNAKM5u3Mg"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fbMF8OKwEe6ilNAKM5u3Mg" name="Average Length With Blank" label="Average Length With Blank">
          <taggedValue xmi:id="_fbMF8eKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average length."/>
          <taggedValue xmi:id="_fbMF8uKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record of non-null values"/>
          <sqlGenericExpression xmi:id="_fbMF8-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fbMF9OKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fbMF9eKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fbMF9uKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fbMF9-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fbMF-OKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fbMF-eKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fbMF-uKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fbMF--KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fbMF_OKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fbMF_eKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fbMF_uKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AvgLengthWithBlankNullIndicator" xmi:id="_WBX3TeKwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="4376.0">
        <parameters xmi:id="_WBX3TuKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3T-KwEe6ilNAKM5u3Mg" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fbYTMOKwEe6ilNAKM5u3Mg" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
          <taggedValue xmi:id="_fbYTMeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field."/>
          <taggedValue xmi:id="_fbYTMuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record"/>
          <sqlGenericExpression xmi:id="_fbYTM-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fbYTNOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fbYTNeKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fbYTNuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fbYTN-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fbYTOOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fbYTOeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fbYTOuKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fbYTO-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fbYTPOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fbYTPeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fbYTPuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fbYTP-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexFreqIndicator" xmi:id="_WBX3UOKwEe6ilNAKM5u3Mg" count="500" computed="true" distinctValueCount="10" uniqueValueCount="262" valueToFreqvalueToDistinctFreq
        <parameters xmi:id="_WBX3UeKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Frequency_Table_0.1.definition#_VGep4Pa7Ed24-N3PsP_o-w"/>
        <builtInIndicatorDefinition xmi:id="_fblHgOKwEe6ilNAKM5u3Mg" name="Soundex Frequency Table" label="Soundex Frequency Table">
          <taggedValue xmi:id="_fblHgeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="_fblHguKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="_fblHg-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_fblHhOKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_fblHheKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fblHhuKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>),  COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) DESC , COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fblHh-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_fblHiOKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fblHieKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fblHiuKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_fblHi-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexLowFreqIndicator" xmi:id="_WBX3UuKwEe6ilNAKM5u3Mg" count="500" computed="true" distinctValueCount="10" uniqueValueCount="262" valueToFreqvalueToDistinctFreq
        <parameters xmi:id="_WBX3U-KwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Low_Frequency_Table_0.1.definition#_AjKIEPbBEd24-N3PsP_o-w"/>
        <builtInIndicatorDefinition xmi:id="_fbzxAOKwEe6ilNAKM5u3Mg" name="Soundex Low Frequency Table" label="Soundex Low Frequency Table">
          <taggedValue xmi:id="_fbzxAeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="_fbzxAuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="_fbzxA-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="SQL"/>
          <sqlGenericExpression xmi:id="_fbzxBOKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d,c ASC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_fbzxBeKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fbzxBuKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>), COUNT(*) ASC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fbzxB-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="DB2"/>
          <sqlGenericExpression xmi:id="_fbzxCOKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fbzxCeKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fbzxCuKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) AS c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) AS d FROM &lt;%=__TABLE_NAME__%> AS t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Informix"/>
          <sqlGenericExpression xmi:id="_fbzxC-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY NYSIIS(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3VOKwEe6ilNAKM5u3Mg" name="BE Code postal" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3VeKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3VuKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/BE_Code_postal_0.1.pattern#_NwUnsD4LEd20H7qFpzB9dg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3V-KwEe6ilNAKM5u3Mg" name="FR Code postal" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3WOKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3WeKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/FR_Code_postal_0.1.pattern#_EJ_moD4LEd20H7qFpzB9dg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3WuKwEe6ilNAKM5u3Mg" name="DE Postleitzahl (postal code)" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3W-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3XOKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/DE_Postleitzahl__postal_code__0.1.pattern#_rK7EgD4LEd20H7qFpzB9dg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3XeKwEe6ilNAKM5u3Mg" name="FR Insee Code" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3XuKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3X-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/FR_Insee_Code_0.1.pattern#_wXkbQEChEeWDcpMk51Q9_w"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3YOKwEe6ilNAKM5u3Mg" name="US State Codes" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3YeKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3YuKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/US_State_Codes_0.1.pattern#_pWgP8LkgEeSVYtNTxh_-xg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3Y-KwEe6ilNAKM5u3Mg" name="Swiss Zip Code validation" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3ZOKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3ZeKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/Swiss_Zip_Code_validation_0.1.pattern#__GBswIyfEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3ZuKwEe6ilNAKM5u3Mg" name="Postal code or Pin code of India" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3Z-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3aOKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/Postal_code_or_Pin_code_of_India_0.1.pattern#_Ego7UIygEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3aeKwEe6ilNAKM5u3Mg" name="US Zipcode Validation" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3auKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3a-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/US_Zipcode_Validation_0.1.pattern#_n2tqUIybEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3bOKwEe6ilNAKM5u3Mg" name="Valid UK Post Codes Upper and Lower Case" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3beKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3buKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/Valid_UK_Post_Codes_Upper_and_Lower_Case_0.1.pattern#_fi29wIybEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR5-KvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_WBX3b-KwEe6ilNAKM5u3Mg" count="500" computed="true">
        <parameters xmi:id="_WBX3cOKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fcAlUOKwEe6ilNAKM5u3Mg" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_fcAlUeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_fcAlUuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_fcAlU-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_WBX3ceKwEe6ilNAKM5u3Mg" count="500" computed="true">
        <parameters xmi:id="_WBX3cuKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <builtInIndicatorDefinition xmi:id="_fcLkcOKwEe6ilNAKM5u3Mg" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_fcLkceKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_fcLkcuKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_fcLkc-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_WBX3c-KwEe6ilNAKM5u3Mg" count="500" computed="true" distinctValueCount="209">
        <parameters xmi:id="_WBX3dOKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fcZm4OKwEe6ilNAKM5u3Mg" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_fcZm4eKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_fcZm4uKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_fcZm4-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_WBX3deKwEe6ilNAKM5u3Mg" count="500" computed="true" uniqueValueCount="110">
        <parameters xmi:id="_WBX3duKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fcoQYOKwEe6ilNAKM5u3Mg" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_fcoQYeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_fcoQYuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_fcoQY-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_fcoQZOKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_fcoQZeKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fcoQZuKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fcoQZ-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fcoQaOKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fcoQaeKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_WBX3d-KwEe6ilNAKM5u3Mg" count="500" computed="true" duplicateValueCount="99">
        <parameters xmi:id="_WBX3eOKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fdM4IOKwEe6ilNAKM5u3Mg" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_fdM4IeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_fdM4IuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_fdM4I-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_fdM4JOKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_fdM4JeKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fdM4JuKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fdM4J-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fdM4KOKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fdM4KeKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_WBX3eeKwEe6ilNAKM5u3Mg" count="500" computed="true">
        <parameters xmi:id="_WBX3euKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fdZFYOKwEe6ilNAKM5u3Mg" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_fdZFYeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_fdZFYuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_fdZFY-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fdZFZOKwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fdZFZeKwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fdZFZuKwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fdZFZ-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthIndicator" xmi:id="_WBX3e-KwEe6ilNAKM5u3Mg" count="500" computed="true" length="3">
        <parameters xmi:id="_WBX3fOKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3feKwEe6ilNAKM5u3Mg" useBlank="false"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fdo9AOKwEe6ilNAKM5u3Mg" name="Minimal Length" label="Minimal Length">
          <taggedValue xmi:id="_fdo9AeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field. Does not take into account the null and blank values when computing the minimal length."/>
          <taggedValue xmi:id="_fdo9AuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record of non-null and non-blank values"/>
          <sqlGenericExpression xmi:id="_fdo9A-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fdo9BOKwEe6ilNAKM5u3Mg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fdo9BeKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fdo9BuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fdo9B-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fdo9COKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fdo9CeKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fdo9CuKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fdo9C-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fdo9DOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fdo9DeKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fdo9DuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fdo9D-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthWithNullIndicator" xmi:id="_WBX3fuKwEe6ilNAKM5u3Mg" count="500" computed="true" length="3">
        <parameters xmi:id="_WBX3f-KwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3gOKwEe6ilNAKM5u3Mg" useBlank="false" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
        <builtInIndicatorDefinition xmi:id="_fd3mgOKwEe6ilNAKM5u3Mg" name="Minimal Length With Null" label="Minimal Length With Null">
          <taggedValue xmi:id="_fd3mgeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field. Does not take into account the blank values when computing the minimal length."/>
          <taggedValue xmi:id="_fd3mguKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record of non-blank values"/>
          <sqlGenericExpression xmi:id="_fd3mg-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fd3mhOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fd3mheKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fd3mhuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fd3mh-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fd3miOKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fd3mieKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fd3miuKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fd3mi-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fd3mjOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fd3mjeKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fd3mjuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fd3mj-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthWithBlankIndicator" xmi:id="_WBX3geKwEe6ilNAKM5u3Mg" count="500" computed="true" length="3">
        <parameters xmi:id="_WBX3guKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3g-KwEe6ilNAKM5u3Mg"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
        <builtInIndicatorDefinition xmi:id="_feLIgOKwEe6ilNAKM5u3Mg" name="Minimal Length With Blank" label="Minimal Length With Blank">
          <taggedValue xmi:id="_feLIgeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
          <taggedValue xmi:id="_feLIguKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record of non-null values"/>
          <sqlGenericExpression xmi:id="_feLIg-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_feLIhOKwEe6ilNAKM5u3Mg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_feLIheKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_feLIhuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_feLIh-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_feLIiOKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_feLIieKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_feLIiuKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_feLIi-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_feLIjOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_feLIjeKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_feLIjuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthIndicator" xmi:id="_WBX3hOKwEe6ilNAKM5u3Mg" count="500" computed="true" length="20">
        <parameters xmi:id="_WBX3heKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3huKwEe6ilNAKM5u3Mg" useBlank="false"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_feX80OKwEe6ilNAKM5u3Mg" name="Maximal Length" label="Maximal Length">
          <taggedValue xmi:id="_feX80eKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field. Does not take into account the null and blank values when computing the maximal length."/>
          <taggedValue xmi:id="_feX80uKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record of non-null and non-blank values"/>
          <sqlGenericExpression xmi:id="_feX80-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_feX81OKwEe6ilNAKM5u3Mg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
          <sqlGenericExpression xmi:id="_feX81eKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_feX81uKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_feX81-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_feX82OKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
          <sqlGenericExpression xmi:id="_feX82eKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_feX82uKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_feX82-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_feX83OKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_feX83eKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_feX83uKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_feX83-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthWithBlankNullIndicator" xmi:id="_WBX3h-KwEe6ilNAKM5u3Mg" count="500" computed="true" length="3">
        <parameters xmi:id="_WBX3iOKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3ieKwEe6ilNAKM5u3Mg" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_feppoOKwEe6ilNAKM5u3Mg" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
          <taggedValue xmi:id="_feppoeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field."/>
          <taggedValue xmi:id="_feppouKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
          <sqlGenericExpression xmi:id="_feppo-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fepppOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fepppeKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fepppuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_feppp-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_feppqOKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_feppqeKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_feppquKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_feppq-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fepprOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_feppreKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_feppruKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_feppr-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthWithNullIndicator" xmi:id="_WBX3iuKwEe6ilNAKM5u3Mg" count="500" computed="true" length="20">
        <parameters xmi:id="_WBX3i-KwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3jOKwEe6ilNAKM5u3Mg" useBlank="false" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fe7WcOKwEe6ilNAKM5u3Mg" name="Maximal Length With Null" label="Maximal Length With Null">
          <taggedValue xmi:id="_fe7WceKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field. Does not take into account the blank values when computing the maximal length."/>
          <taggedValue xmi:id="_fe7WcuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record of non-blank values"/>
          <sqlGenericExpression xmi:id="_fe7Wc-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fe7WdOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fe7WdeKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fe7WduKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fe7Wd-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fe7WeOKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
          <sqlGenericExpression xmi:id="_fe7WeeKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fe7WeuKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fe7We-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fe7WfOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fe7WfeKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fe7WfuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fe7Wf-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthWithBlankIndicator" xmi:id="_WBX3jeKwEe6ilNAKM5u3Mg" count="500" computed="true" length="20">
        <parameters xmi:id="_WBX3juKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3j-KwEe6ilNAKM5u3Mg"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fgA7kOKwEe6ilNAKM5u3Mg" name="Maximal Length With Blank" label="Maximal Length With Blank">
          <taggedValue xmi:id="_fgA7keKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field. Does not take into account the null values when computing the maximal length."/>
          <taggedValue xmi:id="_fgA7kuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record of non-null values"/>
          <sqlGenericExpression xmi:id="_fgA7k-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fgA7lOKwEe6ilNAKM5u3Mg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fgA7leKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fgA7luKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fgA7l-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fgA7mOKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fgA7meKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fgA7muKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fgA7m-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fgA7nOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fgA7neKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fgA7nuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AverageLengthIndicator" xmi:id="_WBX3kOKwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="3914.0">
        <parameters xmi:id="_WBX3keKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3kuKwEe6ilNAKM5u3Mg" useBlank="false"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fgZWEOKwEe6ilNAKM5u3Mg" name="Average Length" label="Average Length">
          <taggedValue xmi:id="_fgZWEeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field. Does not take into account the null and blank values when computing the average length."/>
          <taggedValue xmi:id="_fgZWEuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record of non-null and non-blank values"/>
          <sqlGenericExpression xmi:id="_fgZWE-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fgZWFOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fgZWFeKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fgZWFuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fgZWF-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fgZWGOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fgZWGeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fgZWGuKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fgZWG-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fgZWHOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fgZWHeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fgZWHuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fgZWH-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthWithBlankNullIndicator" xmi:id="_WBX3k-KwEe6ilNAKM5u3Mg" count="500" computed="true" length="20">
        <parameters xmi:id="_WBX3lOKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3leKwEe6ilNAKM5u3Mg" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fgxwkOKwEe6ilNAKM5u3Mg" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
          <taggedValue xmi:id="_fgxwkeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field."/>
          <taggedValue xmi:id="_fgxwkuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record"/>
          <sqlGenericExpression xmi:id="_fgxwk-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fgxwlOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fgxwleKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fgxwluKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fgxwl-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fgxwmOKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fgxwmeKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fgxwmuKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fgxwm-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fgxwnOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fgxwneKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fgxwnuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fgxwn-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AvgLengthWithNullIndicator" xmi:id="_WBX3luKwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="3914.0">
        <parameters xmi:id="_WBX3l-KwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3mOKwEe6ilNAKM5u3Mg" useBlank="false" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fhMnUOKwEe6ilNAKM5u3Mg" name="Average Length With Null" label="Average Length With Null">
          <taggedValue xmi:id="_fhMnUeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field. Does not take into account the blank values when computing the average length."/>
          <taggedValue xmi:id="_fhMnUuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record of non-blank values"/>
          <sqlGenericExpression xmi:id="_fhMnU-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fhMnVOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fhMnVeKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fhMnVuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fhMnV-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fhMnWOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fhMnWeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fhMnWuKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fhMnW-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fhMnXOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fhMnXeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fhMnXuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fhMnX-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AvgLengthWithBlankIndicator" xmi:id="_WBX3meKwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="3914.0">
        <parameters xmi:id="_WBX3muKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3m-KwEe6ilNAKM5u3Mg"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fhrvgOKwEe6ilNAKM5u3Mg" name="Average Length With Blank" label="Average Length With Blank">
          <taggedValue xmi:id="_fhrvgeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average length."/>
          <taggedValue xmi:id="_fhrvguKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record of non-null values"/>
          <sqlGenericExpression xmi:id="_fhrvg-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fhrvhOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fhrvheKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fhrvhuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fhrvh-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fhrviOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fhrvieKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fhrviuKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fhrvi-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fhrvjOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fhrvjeKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fhrvjuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AvgLengthWithBlankNullIndicator" xmi:id="_WBX3nOKwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="3914.0">
        <parameters xmi:id="_WBX3neKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3nuKwEe6ilNAKM5u3Mg" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fifn0OKwEe6ilNAKM5u3Mg" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
          <taggedValue xmi:id="_fifn0eKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field."/>
          <taggedValue xmi:id="_fifn0uKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record"/>
          <sqlGenericExpression xmi:id="_fifn0-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fifn1OKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fifn1eKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fifn1uKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fifn1-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fifn2OKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fifn2eKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fifn2uKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fifn2-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fifn3OKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fifn3eKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fifn3uKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fifn3-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexFreqIndicator" xmi:id="_WBX3n-KwEe6ilNAKM5u3Mg" count="500" computed="true" distinctValueCount="10" uniqueValueCount="110" valueToFreqvalueToDistinctFreq
        <parameters xmi:id="_WBX3oOKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Frequency_Table_0.1.definition#_VGep4Pa7Ed24-N3PsP_o-w"/>
        <builtInIndicatorDefinition xmi:id="_fi_XEOKwEe6ilNAKM5u3Mg" name="Soundex Frequency Table" label="Soundex Frequency Table">
          <taggedValue xmi:id="_fi_XEeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="_fi_XEuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="_fi_XE-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_fi_XFOKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_fi_XFeKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fi_XFuKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>),  COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) DESC , COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fi_XF-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_fi_XGOKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fi_XGeKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fi_XGuKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_fi_XG-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexLowFreqIndicator" xmi:id="_WBX3oeKwEe6ilNAKM5u3Mg" count="500" computed="true" distinctValueCount="10" uniqueValueCount="110" valueToFreqvalueToDistinctFreq
        <parameters xmi:id="_WBX3ouKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Low_Frequency_Table_0.1.definition#_AjKIEPbBEd24-N3PsP_o-w"/>
        <builtInIndicatorDefinition xmi:id="_fjXKgOKwEe6ilNAKM5u3Mg" name="Soundex Low Frequency Table" label="Soundex Low Frequency Table">
          <taggedValue xmi:id="_fjXKgeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="_fjXKguKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="_fjXKg-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="SQL"/>
          <sqlGenericExpression xmi:id="_fjXKhOKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d,c ASC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_fjXKheKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fjXKhuKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>), COUNT(*) ASC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fjXKh-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="DB2"/>
          <sqlGenericExpression xmi:id="_fjXKiOKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fjXKieKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fjXKiuKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) AS c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) AS d FROM &lt;%=__TABLE_NAME__%> AS t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Informix"/>
          <sqlGenericExpression xmi:id="_fjXKi-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY NYSIIS(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBX3o-KwEe6ilNAKM5u3Mg" name="BE Code postal" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBX3pOKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBX3peKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/BE_Code_postal_0.1.pattern#_NwUnsD4LEd20H7qFpzB9dg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6OKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_WBX3puKwEe6ilNAKM5u3Mg" count="500" computed="true">
        <parameters xmi:id="_WBX3p-KwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fj1EkOKwEe6ilNAKM5u3Mg" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_fj1EkeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_fj1EkuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_fj1Ek-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_WBX3qOKwEe6ilNAKM5u3Mg" count="500" computed="true">
        <parameters xmi:id="_WBX3qeKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <builtInIndicatorDefinition xmi:id="_fkS-oOKwEe6ilNAKM5u3Mg" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_fkTlsOKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_fkTlseKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_fkTlsuKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_WBX3quKwEe6ilNAKM5u3Mg" count="500" computed="true" distinctValueCount="451">
        <parameters xmi:id="_WBX3q-KwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fkwRoOKwEe6ilNAKM5u3Mg" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_fkwRoeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_fkwRouKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_fkwRo-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_WBX3rOKwEe6ilNAKM5u3Mg" count="500" computed="true" uniqueValueCount="410">
        <parameters xmi:id="_WBX3reKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_flFo0OKwEe6ilNAKM5u3Mg" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_flFo0eKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_flFo0uKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_flFo0-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_flFo1OKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_flFo1eKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_flFo1uKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_flFo1-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_flFo2OKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_flFo2eKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_WBX3ruKwEe6ilNAKM5u3Mg" count="500" computed="true" duplicateValueCount="41">
        <parameters xmi:id="_WBX3r-KwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_flX8sOKwEe6ilNAKM5u3Mg" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_flX8seKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_flX8suKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_flX8s-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_flX8tOKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_flX8teKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_flX8tuKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_flX8t-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_flX8uOKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_flX8ueKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_WBX3sOKwEe6ilNAKM5u3Mg" count="500" computed="true">
        <parameters xmi:id="_WBX3seKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_flvwIOKwEe6ilNAKM5u3Mg" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_flvwIeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_flvwIuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_flvwI-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_flvwJOKwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_flvwJeKwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_flvwJuKwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_flvwJ-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthIndicator" xmi:id="_WBX3suKwEe6ilNAKM5u3Mg" count="500" computed="true" length="5">
        <parameters xmi:id="_WBX3s-KwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3tOKwEe6ilNAKM5u3Mg" useBlank="false"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fmA14OKwEe6ilNAKM5u3Mg" name="Minimal Length" label="Minimal Length">
          <taggedValue xmi:id="_fmA14eKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field. Does not take into account the null and blank values when computing the minimal length."/>
          <taggedValue xmi:id="_fmA14uKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record of non-null and non-blank values"/>
          <sqlGenericExpression xmi:id="_fmA14-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fmA15OKwEe6ilNAKM5u3Mg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fmA15eKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fmA15uKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fmA15-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fmA16OKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fmA16eKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fmA16uKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fmA16-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fmA17OKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fmA17eKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fmA17uKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fmA17-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthWithNullIndicator" xmi:id="_WBX3teKwEe6ilNAKM5u3Mg" count="500" computed="true" length="5">
        <parameters xmi:id="_WBX3tuKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3t-KwEe6ilNAKM5u3Mg" useBlank="false" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
        <builtInIndicatorDefinition xmi:id="_fmTJwOKwEe6ilNAKM5u3Mg" name="Minimal Length With Null" label="Minimal Length With Null">
          <taggedValue xmi:id="_fmTJweKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field. Does not take into account the blank values when computing the minimal length."/>
          <taggedValue xmi:id="_fmTJwuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record of non-blank values"/>
          <sqlGenericExpression xmi:id="_fmTJw-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fmTJxOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fmTJxeKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fmTJxuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fmTJx-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fmTJyOKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fmTJyeKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fmTJyuKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fmTJy-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fmTJzOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fmTJzeKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fmTJzuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fmTJz-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthWithBlankIndicator" xmi:id="_WBX3uOKwEe6ilNAKM5u3Mg" count="500" computed="true" length="5">
        <parameters xmi:id="_WBX3ueKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3uuKwEe6ilNAKM5u3Mg"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
        <builtInIndicatorDefinition xmi:id="_fmrkQOKwEe6ilNAKM5u3Mg" name="Minimal Length With Blank" label="Minimal Length With Blank">
          <taggedValue xmi:id="_fmrkQeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
          <taggedValue xmi:id="_fmrkQuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record of non-null values"/>
          <sqlGenericExpression xmi:id="_fmrkQ-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fmrkROKwEe6ilNAKM5u3Mg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fmrkReKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fmrkRuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fmrkR-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fmrkSOKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fmrkSeKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fmrkSuKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fmrkS-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fmrkTOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fmrkTeKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fmrkTuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthIndicator" xmi:id="_WBX3u-KwEe6ilNAKM5u3Mg" count="500" computed="true" length="5">
        <parameters xmi:id="_WBX3vOKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3veKwEe6ilNAKM5u3Mg" useBlank="false"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fnCwoOKwEe6ilNAKM5u3Mg" name="Maximal Length" label="Maximal Length">
          <taggedValue xmi:id="_fnCwoeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field. Does not take into account the null and blank values when computing the maximal length."/>
          <taggedValue xmi:id="_fnCwouKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record of non-null and non-blank values"/>
          <sqlGenericExpression xmi:id="_fnCwo-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fnCwpOKwEe6ilNAKM5u3Mg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
          <sqlGenericExpression xmi:id="_fnCwpeKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fnCwpuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fnCwp-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fnCwqOKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
          <sqlGenericExpression xmi:id="_fnCwqeKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fnCwquKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fnCwq-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fnCwrOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fnCwreKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fnCwruKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fnCwr-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthWithBlankNullIndicator" xmi:id="_WBX3vuKwEe6ilNAKM5u3Mg" count="500" computed="true" length="5">
        <parameters xmi:id="_WBX3v-KwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3wOKwEe6ilNAKM5u3Mg" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fnW5sOKwEe6ilNAKM5u3Mg" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
          <taggedValue xmi:id="_fnW5seKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field."/>
          <taggedValue xmi:id="_fnW5suKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
          <sqlGenericExpression xmi:id="_fnW5s-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fnW5tOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fnW5teKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fnW5tuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fnW5t-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fnW5uOKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fnW5ueKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fnW5uuKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fnW5u-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fnW5vOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fnW5veKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fnW5vuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fnW5v-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthWithNullIndicator" xmi:id="_WBX3weKwEe6ilNAKM5u3Mg" count="500" computed="true" length="5">
        <parameters xmi:id="_WBX3wuKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBX3w-KwEe6ilNAKM5u3Mg" useBlank="false" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fnomgOKwEe6ilNAKM5u3Mg" name="Maximal Length With Null" label="Maximal Length With Null">
          <taggedValue xmi:id="_fnomgeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field. Does not take into account the blank values when computing the maximal length."/>
          <taggedValue xmi:id="_fnomguKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record of non-blank values"/>
          <sqlGenericExpression xmi:id="_fnomg-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fnomhOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fnomheKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fnomhuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fnomh-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fnomiOKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
          <sqlGenericExpression xmi:id="_fnomieKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fnomiuKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fnomi-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fnomjOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fnomjeKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fnomjuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fnomj-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthWithBlankIndicator" xmi:id="_WBX3xOKwEe6ilNAKM5u3Mg" count="500" computed="true" length="5">
        <parameters xmi:id="_WBYd8OKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBYd8eKwEe6ilNAKM5u3Mg"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fn7hcOKwEe6ilNAKM5u3Mg" name="Maximal Length With Blank" label="Maximal Length With Blank">
          <taggedValue xmi:id="_fn7hceKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field. Does not take into account the null values when computing the maximal length."/>
          <taggedValue xmi:id="_fn7hcuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record of non-null values"/>
          <sqlGenericExpression xmi:id="_fn7hc-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fn7hdOKwEe6ilNAKM5u3Mg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fn7hdeKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fn7hduKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fn7hd-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fn7heOKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fn7heeKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fn7heuKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fn7he-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fn7hfOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fn7hfeKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fn7hfuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AverageLengthIndicator" xmi:id="_WBYd8uKwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="2500.0">
        <parameters xmi:id="_WBYd8-KwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBYd9OKwEe6ilNAKM5u3Mg" useBlank="false"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_foMAIOKwEe6ilNAKM5u3Mg" name="Average Length" label="Average Length">
          <taggedValue xmi:id="_foMAIeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field. Does not take into account the null and blank values when computing the average length."/>
          <taggedValue xmi:id="_foMAIuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record of non-null and non-blank values"/>
          <sqlGenericExpression xmi:id="_foMAI-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_foMAJOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_foMAJeKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_foMAJuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_foMAJ-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_foMAKOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_foMAKeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_foMAKuKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_foMAK-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_foMALOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_foMALeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_foMALuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_foMAL-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthWithBlankNullIndicator" xmi:id="_WBYd9eKwEe6ilNAKM5u3Mg" count="500" computed="true" length="5">
        <parameters xmi:id="_WBYd9uKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBYd9-KwEe6ilNAKM5u3Mg" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fogJMOKwEe6ilNAKM5u3Mg" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
          <taggedValue xmi:id="_fogJMeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field."/>
          <taggedValue xmi:id="_fogJMuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record"/>
          <sqlGenericExpression xmi:id="_fogJM-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fogJNOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fogJNeKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fogJNuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fogJN-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fogJOOKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fogJOeKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fogJOuKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fogJO-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fogJPOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fogJPeKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fogJPuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fogJP-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AvgLengthWithNullIndicator" xmi:id="_WBYd-OKwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="2500.0">
        <parameters xmi:id="_WBYd-eKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBYd-uKwEe6ilNAKM5u3Mg" useBlank="false" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fo05UOKwEe6ilNAKM5u3Mg" name="Average Length With Null" label="Average Length With Null">
          <taggedValue xmi:id="_fo05UeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field. Does not take into account the blank values when computing the average length."/>
          <taggedValue xmi:id="_fo05UuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record of non-blank values"/>
          <sqlGenericExpression xmi:id="_fo05U-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fo05VOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fo05VeKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fo05VuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fo05V-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fo05WOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fo05WeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fo05WuKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fo05W-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fo05XOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fo05XeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fo05XuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fo05X-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AvgLengthWithBlankIndicator" xmi:id="_WBYd--KwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="2500.0">
        <parameters xmi:id="_WBYd_OKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBYd_eKwEe6ilNAKM5u3Mg"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fpJpcOKwEe6ilNAKM5u3Mg" name="Average Length With Blank" label="Average Length With Blank">
          <taggedValue xmi:id="_fpJpceKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average length."/>
          <taggedValue xmi:id="_fpJpcuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record of non-null values"/>
          <sqlGenericExpression xmi:id="_fpJpc-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fpJpdOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fpJpdeKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fpJpduKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fpJpd-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fpJpeOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fpJpeeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fpJpeuKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fpJpe-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fpJpfOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fpJpfeKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fpJpfuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AvgLengthWithBlankNullIndicator" xmi:id="_WBYd_uKwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="2500.0">
        <parameters xmi:id="_WBYd_-KwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBYeAOKwEe6ilNAKM5u3Mg" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fpckYOKwEe6ilNAKM5u3Mg" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
          <taggedValue xmi:id="_fpckYeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field."/>
          <taggedValue xmi:id="_fpckYuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record"/>
          <sqlGenericExpression xmi:id="_fpckY-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fpckZOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fpckZeKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fpckZuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fpckZ-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fpckaOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fpckaeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fpckauKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fpcka-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fpckbOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fpckbeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fpckbuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fpckb-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexFreqIndicator" xmi:id="_WBYeAeKwEe6ilNAKM5u3Mg" count="500" computed="true" distinctValueCount="1" uniqueValueCount="410" valueToFreq="ACED0005737200116A6176612E7574696C2E486173684D61700507DAC1C31660D103000246000A6C6F6164466163746F724900097468726573686F6C6478703F4000000000000C7708000000100000000174000539393731327372000E6A6176612E6C616E672E4C6F6E673B8BE490CC8F23DF0200014A000576616C7565787200106A6176612E6C616E672E4E756D62657286AC951D0B94E08B020000787000000000000001F478" valueToDistinctFreq="ACED0005737200116A6176612E7574696C2E486173684D61700507DAC1C31660D103000246000A6C6F6164466163746F724900097468726573686F6C6478703F4000000000000C7708000000100000000174000539393731327372000E6A6176612E6C616E672E4C6F6E673B8BE490CC8F23DF0200014A000576616C7565787200106A6176612E6C616E672E4E756D62657286AC951D0B94E08B020000787000000000000001C378">
        <parameters xmi:id="_WBYeAuKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Frequency_Table_0.1.definition#_VGep4Pa7Ed24-N3PsP_o-w"/>
        <builtInIndicatorDefinition xmi:id="_fptqIOKwEe6ilNAKM5u3Mg" name="Soundex Frequency Table" label="Soundex Frequency Table">
          <taggedValue xmi:id="_fptqIeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="_fptqIuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="_fptqI-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_fptqJOKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_fptqJeKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fptqJuKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>),  COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) DESC , COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fptqJ-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_fptqKOKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fptqKeKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fptqKuKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_fptqK-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexLowFreqIndicator" xmi:id="_WBYeA-KwEe6ilNAKM5u3Mg" count="500" computed="true" distinctValueCount="1" uniqueValueCount="410" valueToFreq="ACED0005737200116A6176612E7574696C2E486173684D61700507DAC1C31660D103000246000A6C6F6164466163746F724900097468726573686F6C6478703F4000000000000C7708000000100000000174000539393731327372000E6A6176612E6C616E672E4C6F6E673B8BE490CC8F23DF0200014A000576616C7565787200106A6176612E6C616E672E4E756D62657286AC951D0B94E08B020000787000000000000001F478" valueToDistinctFreq="ACED0005737200116A6176612E7574696C2E486173684D61700507DAC1C31660D103000246000A6C6F6164466163746F724900097468726573686F6C6478703F4000000000000C7708000000100000000174000539393731327372000E6A6176612E6C616E672E4C6F6E673B8BE490CC8F23DF0200014A000576616C7565787200106A6176612E6C616E672E4E756D62657286AC951D0B94E08B020000787000000000000001C378">
        <parameters xmi:id="_WBYeBOKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Low_Frequency_Table_0.1.definition#_AjKIEPbBEd24-N3PsP_o-w"/>
        <builtInIndicatorDefinition xmi:id="_fp-I0OKwEe6ilNAKM5u3Mg" name="Soundex Low Frequency Table" label="Soundex Low Frequency Table">
          <taggedValue xmi:id="_fp-I0eKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="_fp-I0uKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="_fp-I0-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="SQL"/>
          <sqlGenericExpression xmi:id="_fp-I1OKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d,c ASC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_fp-I1eKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fp-I1uKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>), COUNT(*) ASC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fp-I1-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="DB2"/>
          <sqlGenericExpression xmi:id="_fp-I2OKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fp-I2eKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fp-I2uKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) AS c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) AS d FROM &lt;%=__TABLE_NAME__%> AS t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Informix"/>
          <sqlGenericExpression xmi:id="_fp-I2-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY NYSIIS(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeBeKwEe6ilNAKM5u3Mg" name="BE Code postal" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeBuKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeB-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/BE_Code_postal_0.1.pattern#_NwUnsD4LEd20H7qFpzB9dg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6uKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RowCountIndicator" xmi:id="_WBYeCOKwEe6ilNAKM5u3Mg" count="500" computed="true">
        <parameters xmi:id="_WBYeCeKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Row_Count_0.1.definition#_ccFOkBF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fqNZYOKwEe6ilNAKM5u3Mg" name="Row Count" label="Row Count">
          <taggedValue xmi:id="_fqNZYeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of rows"/>
          <taggedValue xmi:id="_fqNZYuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of records"/>
          <sqlGenericExpression xmi:id="_fqNZY-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:NullCountIndicator" xmi:id="_WBYeCuKwEe6ilNAKM5u3Mg" count="500" computed="true">
        <parameters xmi:id="_WBYeC-KwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Null_Count_0.1.definition#_GrAeADh9Ed2XmO7pl5Yuyg"/>
        <builtInIndicatorDefinition xmi:id="_fqbb0OKwEe6ilNAKM5u3Mg" name="Null Count" label="Null Count">
          <taggedValue xmi:id="_fqbb0eKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluate the number of missing data (null records)"/>
          <taggedValue xmi:id="_fqbb0uKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of null rows"/>
          <sqlGenericExpression xmi:id="_fqbb0-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE &lt;%=__COLUMN_NAMES__%> IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DistinctCountIndicator" xmi:id="_WBYeDOKwEe6ilNAKM5u3Mg" count="500" computed="true" distinctValueCount="47">
        <parameters xmi:id="_WBYeDeKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Distinct_Count_0.1.definition#_ccHq0BF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fqqsYOKwEe6ilNAKM5u3Mg" name="Distinct Count" label="Distinct Count">
          <taggedValue xmi:id="_fqqsYeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of distinct rows (like a &quot;SELECT DISTINCT&quot; SQL statement)"/>
          <taggedValue xmi:id="_fqqsYuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of distinct records"/>
          <sqlGenericExpression xmi:id="_fqqsY-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT DISTINCT &lt;%=__COLUMN_NAMES__%> FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>) A" language="SQL"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:UniqueCountIndicator" xmi:id="_WBYeDuKwEe6ilNAKM5u3Mg" count="500" computed="true" uniqueValueCount="10">
        <parameters xmi:id="_WBYeD-KwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Unique_Count_0.1.definition#_ccHq0RF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fq6kAOKwEe6ilNAKM5u3Mg" name="Unique Count" label="Unique Count">
          <taggedValue xmi:id="_fq6kAeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of unique rows (i.e. distinct rows with only one instance: rows that are not duplicated)"/>
          <taggedValue xmi:id="_fq6kAuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of unique records"/>
          <sqlGenericExpression xmi:id="_fq6kA-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_fq6kBOKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_fq6kBeKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fq6kBuKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount = 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fq6kB-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fq6kCOKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fq6kCeKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) = 1)  myquery" language="Hive" version=""/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:DuplicateCountIndicator" xmi:id="_WBYeEOKwEe6ilNAKM5u3Mg" count="500" computed="true" duplicateValueCount="37">
        <parameters xmi:id="_WBYeEeKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Duplicate_Count_0.1.definition#_ccHq0hF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_frImcOKwEe6ilNAKM5u3Mg" name="Duplicate Count" label="Duplicate Count">
          <taggedValue xmi:id="_frImceKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of duplicate rows. This number and the number of unique data equals the number of distinct rows"/>
          <taggedValue xmi:id="_frImcuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of duplicated records"/>
          <sqlGenericExpression xmi:id="_frImc-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="SQL"/>
          <sqlGenericExpression xmi:id="_frImdOKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="MySQL"/>
          <sqlGenericExpression xmi:id="_frImdeKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Oracle"/>
          <sqlGenericExpression xmi:id="_frImduKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING mycount > 1) AS myquery" language="Teradata"/>
          <sqlGenericExpression xmi:id="_frImd-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_frImeOKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) mycount FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) AS myquery" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_frImeeKwEe6ilNAKM5u3Mg" body="SELECT COUNT(*) FROM (SELECT &lt;%=__COLUMN_NAMES__%>, COUNT(*) FROM &lt;%=__TABLE_NAME__%>  m &lt;%=__WHERE_CLAUSE__%> GROUP BY &lt;%=__COLUMN_NAMES__%> HAVING COUNT(*) > 1) myquery" language="Hive"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:BlankCountIndicator" xmi:id="_WBYeEuKwEe6ilNAKM5u3Mg" count="500" computed="true">
        <parameters xmi:id="_WBYeE-KwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Simple Statistics/Blank_Count_0.1.definition#_ccHq0xF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_frWB0OKwEe6ilNAKM5u3Mg" name="Blank Count" label="Blank Count">
          <taggedValue xmi:id="_frWB0eKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of blank rows. A blank is a non null textual data that contains only white spaces (or nothing). Note that Oracle does not distinguish between the empty string and the null value"/>
          <taggedValue xmi:id="_frWB0uKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the number of blank records"/>
          <sqlGenericExpression xmi:id="_frWB0-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_frWB1OKwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE TRIM(&lt;%=__COLUMN_NAMES__%>) IS NULL &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_frWB1eKwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_frWB1uKwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) = '' &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_frWB1-KwEe6ilNAKM5u3Mg" body="SELECT COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> = '' or RTRIM(LTRIM(&lt;%=__COLUMN_NAMES__%>)) = '') &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthIndicator" xmi:id="_WBYeFOKwEe6ilNAKM5u3Mg" count="500" computed="true" length="2">
        <parameters xmi:id="_WBYeFeKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBYeFuKwEe6ilNAKM5u3Mg" useBlank="false"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_0.1.definition#_ccHq1BF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_frjdMOKwEe6ilNAKM5u3Mg" name="Minimal Length" label="Minimal Length">
          <taggedValue xmi:id="_frjdMeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field. Does not take into account the null and blank values when computing the minimal length."/>
          <taggedValue xmi:id="_frjdMuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record of non-null and non-blank values"/>
          <sqlGenericExpression xmi:id="_frjdM-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_frjdNOKwEe6ilNAKM5u3Mg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_frjdNeKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_frjdNuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_frjdN-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_frjdOOKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_frjdOeKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_frjdOuKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_frjdO-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_frjdPOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (1=1) AND (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_frjdPeKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_frjdPuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_frjdP-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthWithNullIndicator" xmi:id="_WBYeF-KwEe6ilNAKM5u3Mg" count="500" computed="true" length="2">
        <parameters xmi:id="_WBYeGOKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBYeGeKwEe6ilNAKM5u3Mg" useBlank="false" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Null_0.1.definition#_a4KsoI1qEd-xwI2imLgHRA"/>
        <builtInIndicatorDefinition xmi:id="_frw4kOKwEe6ilNAKM5u3Mg" name="Minimal Length With Null" label="Minimal Length With Null">
          <taggedValue xmi:id="_frw4keKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field. Does not take into account the blank values when computing the minimal length."/>
          <taggedValue xmi:id="_frw4kuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record of non-blank values"/>
          <sqlGenericExpression xmi:id="_frw4k-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_frw4lOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_frw4leKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_frw4luKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_frw4l-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_frw4mOKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_frw4meKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_frw4muKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_frw4m-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_frw4nOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_frw4neKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_frw4nuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_frw4n-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthWithBlankIndicator" xmi:id="_WBYeGuKwEe6ilNAKM5u3Mg" count="500" computed="true" length="2">
        <parameters xmi:id="_WBYeG-KwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBYeHOKwEe6ilNAKM5u3Mg"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_0.1.definition#_G4EzQZU9Ed-Y15ulK_jijQ"/>
        <builtInIndicatorDefinition xmi:id="_fr9s4OKwEe6ilNAKM5u3Mg" name="Minimal Length With Blank" label="Minimal Length With Blank">
          <taggedValue xmi:id="_fr9s4eKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field. Does not take into account the null values when computing the minimal length."/>
          <taggedValue xmi:id="_fr9s4uKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record of non-null values"/>
          <sqlGenericExpression xmi:id="_fr9s4-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fr9s5OKwEe6ilNAKM5u3Mg" body="SELECT MIN( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fr9s5eKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fr9s5uKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fr9s5-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fr9s6OKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fr9s6eKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fr9s6uKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fr9s6-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fr9s7OKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fr9s7eKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fr9s7uKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthIndicator" xmi:id="_WBYeHeKwEe6ilNAKM5u3Mg" count="500" computed="true" length="2">
        <parameters xmi:id="_WBYeHuKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBYeH-KwEe6ilNAKM5u3Mg" useBlank="false"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_0.1.definition#_ccHq1RF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_fsKhMOKwEe6ilNAKM5u3Mg" name="Maximal Length" label="Maximal Length">
          <taggedValue xmi:id="_fsKhMeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field. Does not take into account the null and blank values when computing the maximal length."/>
          <taggedValue xmi:id="_fsKhMuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record of non-null and non-blank values"/>
          <sqlGenericExpression xmi:id="_fsKhM-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fsKhNOKwEe6ilNAKM5u3Mg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle" modificationDate=""/>
          <sqlGenericExpression xmi:id="_fsKhNeKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fsKhNuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fsKhN-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fsKhOOKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" modificationDate=""/>
          <sqlGenericExpression xmi:id="_fsKhOeKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fsKhOuKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' )  &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fsKhO-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fsKhPOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fsKhPeKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fsKhPuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fsKhP-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MinLengthWithBlankNullIndicator" xmi:id="_WBYeIOKwEe6ilNAKM5u3Mg" count="500" computed="true" length="2">
        <parameters xmi:id="_WBYeIeKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBYeIuKwEe6ilNAKM5u3Mg" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Minimal_Length_With_Blank_and_Null_0.1.definition#_9HDjMJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fsWucOKwEe6ilNAKM5u3Mg" name="Minimal Length With Blank and Null" label="Minimal Length With Blank and Null">
          <taggedValue xmi:id="_fsWuceKwEe6ilNAKM5u3Mg" tag="Description" value="computes the minimal length of a text field."/>
          <taggedValue xmi:id="_fsWucuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the smallest textual record"/>
          <sqlGenericExpression xmi:id="_fsWuc-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fsWudOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fsWudeKwEe6ilNAKM5u3Mg" body="SELECT MIN(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fsWuduKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fsWud-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fsWueOKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fsWueeKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fsWueuKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fsWue-KwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fsWufOKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fsWufeKwEe6ilNAKM5u3Mg" body="SELECT MIN(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fsWufuKwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fsWuf-KwEe6ilNAKM5u3Mg" body="SELECT MIN(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthWithNullIndicator" xmi:id="_WBYeI-KwEe6ilNAKM5u3Mg" count="500" computed="true" length="2">
        <parameters xmi:id="_WBYeJOKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBYeJeKwEe6ilNAKM5u3Mg" useBlank="false" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Null_0.1.definition#_-_UFUJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fsobQOKwEe6ilNAKM5u3Mg" name="Maximal Length With Null" label="Maximal Length With Null">
          <taggedValue xmi:id="_fsobQeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field. Does not take into account the blank values when computing the maximal length."/>
          <taggedValue xmi:id="_fsobQuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record of non-blank values"/>
          <sqlGenericExpression xmi:id="_fsobQ-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fsobROKwEe6ilNAKM5u3Mg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fsobReKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fsobRuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fsobR-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fsobSOKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive" version=""/>
          <sqlGenericExpression xmi:id="_fsobSeKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fsobSuKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fsobS-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fsobTOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fsobTeKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_fsobTuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fsobT-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthWithBlankIndicator" xmi:id="_WBYeJuKwEe6ilNAKM5u3Mg" count="500" computed="true" length="2">
        <parameters xmi:id="_WBYeJ-KwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBYeKOKwEe6ilNAKM5u3Mg"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_0.1.definition#_-xmZcJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_fs5hAOKwEe6ilNAKM5u3Mg" name="Maximal Length With Blank" label="Maximal Length With Blank">
          <taggedValue xmi:id="_fs5hAeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field. Does not take into account the null values when computing the maximal length."/>
          <taggedValue xmi:id="_fs5hAuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record of non-null values"/>
          <sqlGenericExpression xmi:id="_fs5hA-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_fs5hBOKwEe6ilNAKM5u3Mg" body="SELECT MAX( LENGTH(&lt;%=__COLUMN_NAMES__%>) ) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fs5hBeKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fs5hBuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_fs5hB-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_fs5hCOKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_fs5hCeKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fs5hCuKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_fs5hC-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_fs5hDOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fs5hDeKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_fs5hDuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(&lt;%=__COLUMN_NAMES__%>)) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AverageLengthIndicator" xmi:id="_WBYeKeKwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="1000.0">
        <parameters xmi:id="_WBYeKuKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBYeK-KwEe6ilNAKM5u3Mg" useBlank="false"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_0.1.definition#_ccIR4BF2Ed2PKb6nEJEvhw"/>
        <builtInIndicatorDefinition xmi:id="_ftG8YOKwEe6ilNAKM5u3Mg" name="Average Length" label="Average Length">
          <taggedValue xmi:id="_ftG8YeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field. Does not take into account the null and blank values when computing the average length."/>
          <taggedValue xmi:id="_ftG8YuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record of non-null and non-blank values"/>
          <sqlGenericExpression xmi:id="_ftG8Y-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_ftG8ZOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_ftG8ZeKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_ftG8ZuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_ftG8Z-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_ftG8aOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_ftG8aeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_ftG8auKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_ftG8a-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( &lt;%=__COLUMN_NAMES__%> )), COUNT( &lt;%=__COLUMN_NAMES__%> ) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) AND ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_ftG8bOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_ftG8beKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_ftG8buKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_ftG8b-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(&lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) AND (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:MaxLengthWithBlankNullIndicator" xmi:id="_WBYeLOKwEe6ilNAKM5u3Mg" count="500" computed="true" length="2">
        <parameters xmi:id="_WBYeLeKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBYeLuKwEe6ilNAKM5u3Mg" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Maximal_Length_With_Blank_and_Null_0.1.definition#_-hzp8JSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_ftTJoOKwEe6ilNAKM5u3Mg" name="Maximal Length With Blank and Null" label="Maximal Length With Blank and Null">
          <taggedValue xmi:id="_ftTJoeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the maximal length of a text field."/>
          <taggedValue xmi:id="_ftTJouKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the length of the longest textual record"/>
          <sqlGenericExpression xmi:id="_ftTJo-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_ftTJpOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_ftTJpeKwEe6ilNAKM5u3Mg" body="SELECT MAX(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_ftTJpuKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_ftTJp-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_ftTJqOKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_ftTJqeKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_ftTJquKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_ftTJq-KwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%>  END )) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_ftTJrOKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_ftTJreKwEe6ilNAKM5u3Mg" body="SELECT MAX(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_ftTJruKwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_ftTJr-KwEe6ilNAKM5u3Mg" body="SELECT MAX(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AvgLengthWithNullIndicator" xmi:id="_WBYeL-KwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="1000.0">
        <parameters xmi:id="_WBYeMOKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBYeMeKwEe6ilNAKM5u3Mg" useBlank="false" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Null_0.1.definition#__vI_wJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_ftev0OKwEe6ilNAKM5u3Mg" name="Average Length With Null" label="Average Length With Null">
          <taggedValue xmi:id="_ftev0eKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field. Does not take into account the blank values when computing the average length."/>
          <taggedValue xmi:id="_ftev0uKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record of non-blank values"/>
          <sqlGenericExpression xmi:id="_ftev0-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_ftev1OKwEe6ilNAKM5u3Mg" body="SELECT SUM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL THEN 0 ELSE LENGTH(&lt;%=__COLUMN_NAMES__%>) END), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(NVL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) IS NOT NULL) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_ftev1eKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (LTRIM(RTRIM(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END)) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_ftev1uKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_ftev1-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_ftev2OKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_ftev2eKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_ftev2uKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END ))  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_ftev2-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN  &lt;%=__COLUMN_NAMES__%>  IS NULL  THEN 'NULL TALEND' ELSE  &lt;%=__COLUMN_NAMES__%>  END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_ftev3OKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE ( TRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN 'NULL TALEND' ELSE &lt;%=__COLUMN_NAMES__%> END )  &lt;>  '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_ftev3eKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(ISNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_ftev3uKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_ftev3-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (TRIM(IFNULL(&lt;%=__COLUMN_NAMES__%>,'NULL TALEND')) &lt;> '' ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AvgLengthWithBlankIndicator" xmi:id="_WBYeMuKwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="1000.0">
        <parameters xmi:id="_WBYeM-KwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBYeNOKwEe6ilNAKM5u3Mg"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_0.1.definition#__gPoIJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_ftqWAOKwEe6ilNAKM5u3Mg" name="Average Length With Blank" label="Average Length With Blank">
          <taggedValue xmi:id="_ftqWAeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field. Does not take into account the null values when computing the average length."/>
          <taggedValue xmi:id="_ftqWAuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record of non-null values"/>
          <sqlGenericExpression xmi:id="_ftqWA-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_ftqWBOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_ftqWBeKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) )=0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_ftqWBuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_ftqWB-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_ftqWCOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_ftqWCeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_ftqWCuKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM(&lt;%=__COLUMN_NAMES__%>)) ) =0  THEN '' ELSE  &lt;%=__COLUMN_NAMES__%> END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_ftqWC-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   WHERE ( &lt;%=__COLUMN_NAMES__%>  IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_ftqWDOKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_ftqWDeKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_ftqWDuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> WHERE (&lt;%=__COLUMN_NAMES__%> IS NOT NULL ) &lt;%=__AND_WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:AvgLengthWithBlankNullIndicator" xmi:id="_WBYeNeKwEe6ilNAKM5u3Mg" count="500" computed="true" sumLength="1000.0">
        <parameters xmi:id="_WBYeNuKwEe6ilNAKM5u3Mg">
          <textParameter xmi:id="_WBYeN-KwEe6ilNAKM5u3Mg" useNulls="true"/>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Text Statistics/Average_Length_With_Blank_and_Null_0.1.definition#__TbUIJSOEd-TE5ti6XNR2Q"/>
        <builtInIndicatorDefinition xmi:id="_ft18MOKwEe6ilNAKM5u3Mg" name="Average Length With Blank and Null" label="Average Length With Blank and Null">
          <taggedValue xmi:id="_ft18MeKwEe6ilNAKM5u3Mg" tag="Description" value="computes the average length of the field."/>
          <taggedValue xmi:id="_ft18MuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the average length of the textual record"/>
          <sqlGenericExpression xmi:id="_ft18M-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQL"/>
          <sqlGenericExpression xmi:id="_ft18NOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Oracle"/>
          <sqlGenericExpression xmi:id="_ft18NeKwEe6ilNAKM5u3Mg" body="SELECT SUM(LEN(CASE WHEN  LEN( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) )=0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_ft18NuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="DB2"/>
          <sqlGenericExpression xmi:id="_ft18N-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="SQLite"/>
          <sqlGenericExpression xmi:id="_ft18OOKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Hive"/>
          <sqlGenericExpression xmi:id="_ft18OeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Teradata"/>
          <sqlGenericExpression xmi:id="_ft18OuKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH( CASE WHEN   CHAR_LENGTH( LTRIM(RTRIM( CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END )) ) =0  THEN '' ELSE   CASE WHEN &lt;%=__COLUMN_NAMES__%> IS NULL  THEN '' ELSE &lt;%=__COLUMN_NAMES__%> END  END)), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Adaptive Server Enterprise | Sybase Adaptive Server IQ"/>
          <sqlGenericExpression xmi:id="_ft18O-KwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM  &lt;%=__TABLE_NAME__%>   &lt;%=__WHERE_CLAUSE__%>" language="Informix"/>
          <sqlGenericExpression xmi:id="_ft18POKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(&lt;%=__COLUMN_NAMES__%>)), COUNT(*) FROM &lt;%=__TABLE_NAME__%>  &lt;%=__WHERE_CLAUSE__%>" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_ft18PeKwEe6ilNAKM5u3Mg" body="SELECT SUM(CHAR_LENGTH(ISNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Netezza"/>
          <sqlGenericExpression xmi:id="_ft18PuKwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="Snowflake"/>
          <sqlGenericExpression xmi:id="_ft18P-KwEe6ilNAKM5u3Mg" body="SELECT SUM(LENGTH(IFNULL(&lt;%=__COLUMN_NAMES__%>,''))), COUNT(*) FROM &lt;%=__TABLE_NAME__%> &lt;%=__WHERE_CLAUSE__%>" language="HDB"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexFreqIndicator" xmi:id="_WBYeOOKwEe6ilNAKM5u3Mg" count="500" computed="true" distinctValueCount="10" uniqueValueCount="10" valueToFreqvalueToDistinctFreq
        <parameters xmi:id="_WBYeOeKwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Frequency_Table_0.1.definition#_VGep4Pa7Ed24-N3PsP_o-w"/>
        <builtInIndicatorDefinition xmi:id="_fuBiYOKwEe6ilNAKM5u3Mg" name="Soundex Frequency Table" label="Soundex Frequency Table">
          <taggedValue xmi:id="_fuBiYeKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="_fuBiYuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="_fuBiY-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="SQL"/>
          <sqlGenericExpression xmi:id="_fuBiZOKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_fuBiZeKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fuBiZuKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>),  COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) DESC , COUNT(*) DESC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fuBiZ-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="DB2"/>
          <sqlGenericExpression xmi:id="_fuBiaOKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fuBiaeKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d DESC,c DESC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fuBiauKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Informix"/>
          <sqlGenericExpression xmi:id="_fuBia-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d DESC,c DESC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:SoundexLowFreqIndicator" xmi:id="_WBYeOuKwEe6ilNAKM5u3Mg" count="500" computed="true" distinctValueCount="10" uniqueValueCount="10" valueToFreq="ACED0005737200116A6176612E7574696C2E486173684D61700507DAC1C31660D103000246000A6C6F6164466163746F724900097468726573686F6C6478703F4000000000000C7708000000100000000A74000241527372000E6A6176612E6C616E672E4C6F6E673B8BE490CC8F23DF0200014A000576616C7565787200106A6176612E6C616E672E4E756D62657286AC951D0B94E08B0200007870000000000000000174000243547371007E0003000000000000000574000248497371007E00030000000000000004740002494C7371007E0003000000000000000F740002494E7371007E00030000000000000009740002464C7371007E0003000000000000001C740002494171007E000574000247417371007E00030000000000000007740002494471007E0009740002444371007E000578" valueToDistinctFreq
        <parameters xmi:id="_WBYeO-KwEe6ilNAKM5u3Mg"/>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Soundex/Soundex_Low_Frequency_Table_0.1.definition#_AjKIEPbBEd24-N3PsP_o-w"/>
        <builtInIndicatorDefinition xmi:id="_fuL6cOKwEe6ilNAKM5u3Mg" name="Soundex Low Frequency Table" label="Soundex Low Frequency Table">
          <taggedValue xmi:id="_fuL6ceKwEe6ilNAKM5u3Mg" tag="Description" value="counts the number of records for each record with a distinct soundex"/>
          <taggedValue xmi:id="_fuL6cuKwEe6ilNAKM5u3Mg" tag="Purpose" value="evaluates the most frequent records with respect to their soundex value"/>
          <sqlGenericExpression xmi:id="_fuL6c-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="SQL"/>
          <sqlGenericExpression xmi:id="_fuL6dOKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>) , COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY 2 ORDER BY d,c ASC" language="MySQL"/>
          <sqlGenericExpression xmi:id="_fuL6deKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Oracle"/>
          <sqlGenericExpression xmi:id="_fuL6duKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*), COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>), COUNT(*) ASC" language="PostgreSQL"/>
          <sqlGenericExpression xmi:id="_fuL6d-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="DB2"/>
          <sqlGenericExpression xmi:id="_fuL6eOKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Teradata"/>
          <sqlGenericExpression xmi:id="_fuL6eeKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Microsoft SQL Server"/>
          <sqlGenericExpression xmi:id="_fuL6euKwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), SOUNDEX(&lt;%=__COLUMN_NAMES__%>), COUNT(*) AS c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) AS d FROM &lt;%=__TABLE_NAME__%> AS t &lt;%=__WHERE_CLAUSE__%> GROUP BY SOUNDEX(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Informix"/>
          <sqlGenericExpression xmi:id="_fuL6e-KwEe6ilNAKM5u3Mg" body="SELECT MAX(&lt;%=__COLUMN_NAMES__%>), NYSIIS(&lt;%=__COLUMN_NAMES__%>), COUNT(*) c, COUNT(DISTINCT &lt;%=__COLUMN_NAMES__%>) d FROM &lt;%=__TABLE_NAME__%> t &lt;%=__WHERE_CLAUSE__%> GROUP BY NYSIIS(&lt;%=__COLUMN_NAMES__%>) ORDER BY d,c ASC" language="Netezza"/>
        </builtInIndicatorDefinition>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYePOKwEe6ilNAKM5u3Mg" name="DE Postleitzahl (postal code)" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYePeKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYePuKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/DE_Postleitzahl__postal_code__0.1.pattern#_rK7EgD4LEd20H7qFpzB9dg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeP-KwEe6ilNAKM5u3Mg" name="FR Code postal" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeQOKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeQeKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/FR_Code_postal_0.1.pattern#_EJ_moD4LEd20H7qFpzB9dg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeQuKwEe6ilNAKM5u3Mg" name="FR Insee Code" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeQ-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeROKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/FR_Insee_Code_0.1.pattern#_wXkbQEChEeWDcpMk51Q9_w"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeReKwEe6ilNAKM5u3Mg" name="Postal code or Pin code of India" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeRuKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeR-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/Postal_code_or_Pin_code_of_India_0.1.pattern#_Ego7UIygEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeSOKwEe6ilNAKM5u3Mg" name="Swiss Zip Code validation" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeSeKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeSuKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/Swiss_Zip_Code_validation_0.1.pattern#__GBswIyfEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeS-KwEe6ilNAKM5u3Mg" name="US State Codes" count="500" computed="true" validRow="true" matchingValueCount="499" notMatchingValueCount="1">
        <parameters xmi:id="_WBYeTOKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeTeKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/US_State_Codes_0.1.pattern#_pWgP8LkgEeSVYtNTxh_-xg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeTuKwEe6ilNAKM5u3Mg" name="US Zipcode Validation" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeT-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeUOKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/US_Zipcode_Validation_0.1.pattern#_n2tqUIybEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeUeKwEe6ilNAKM5u3Mg" name="Valid UK Post Codes Upper and Lower Case" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeUuKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeU-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/Valid_UK_Post_Codes_Upper_and_Lower_Case_0.1.pattern#_fi29wIybEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeVOKwEe6ilNAKM5u3Mg" name="Hex Color Codes" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeVeKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeVuKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/color/Hex_Color_Codes_0.1.pattern#_ly9QgcBQEd2Zap05uF3mKA"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeV-KwEe6ilNAKM5u3Mg" name="EN Amount Money" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeWOKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeWeKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/currency/EN_Amount_Money_0.1.pattern#_TTN-cEClEeWDcpMk51Q9_w"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeWuKwEe6ilNAKM5u3Mg" name="FR Amount Money" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeW-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeXOKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/currency/FR_Amount_Money_0.1.pattern#_MKEKcEClEeWDcpMk51Q9_w"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeXeKwEe6ilNAKM5u3Mg" name="Bulgaria Vat Number" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeXuKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeX-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/customer/Bulgaria_Vat_Number_0.1.pattern#_b95-YIydEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeYOKwEe6ilNAKM5u3Mg" name="French VATNumber" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeYeKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeYuKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/customer/French_VATNumber_0.1.pattern#_ga6fofbIEd2c5L1gaJyUtQ"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeY-KwEe6ilNAKM5u3Mg" name="Gender" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeZOKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeZeKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/customer/Gender_0.1.pattern#_TXHDQceCEd2zV_ZhgRMOzA"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeZuKwEe6ilNAKM5u3Mg" name="SEDOL" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeZ-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeaOKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/customer/SEDOL_0.1.pattern#_u--T0EClEeWDcpMk51Q9_w"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeaeKwEe6ilNAKM5u3Mg" name="24 Hour Time" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeauKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYea-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/24_Hour_Time_0.1.pattern#_nj3TsD4KEd20H7qFpzB9dg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYebOKwEe6ilNAKM5u3Mg" name="Current Century Date" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYebeKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYebuKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/Current_Century_Date_0.1.pattern#_khsAgIyhEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeb-KwEe6ilNAKM5u3Mg" name="EN Month" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYecOKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeceKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/EN_Month_0.1.pattern#_cfceoEC_EeWBxNQvuPBQ-Q"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYecuKwEe6ilNAKM5u3Mg" name="EN Month Abbrev" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYec-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYedOKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/EN_Month_Abbrev_0.1.pattern#_T8ZfgEC_EeWBxNQvuPBQ-Q"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYedeKwEe6ilNAKM5u3Mg" name="ISO Date" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeduKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYed-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/ISO_Date_0.1.pattern#_M4zogD4ZEd24WPpU35gV1A"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeeOKwEe6ilNAKM5u3Mg" name="Month" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeeeKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeeuKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/date/Month_0.1.pattern#_ZNaNsD4ZEd24WPpU35gV1A"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYee-KwEe6ilNAKM5u3Mg" name="Email Address" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYefOKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYefeKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/internet/Email_Address_0.1.pattern#_rC5TcD4XEd24WPpU35gV1A"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYefuKwEe6ilNAKM5u3Mg" name="IP Address" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYef-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYegOKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/internet/IP_Address_0.1.pattern#_pOs9MAyEEd6OfvNiP9lrnQ"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYegeKwEe6ilNAKM5u3Mg" name="IPv6 Address" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeguKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeg-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/internet/IPv6_Address_0.1.pattern#_IVLZAECkEeWDcpMk51Q9_w"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYehOKwEe6ilNAKM5u3Mg" name="MAC Address" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeheKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYehuKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/internet/MAC_Address_0.1.pattern#_xVVjsECkEeWDcpMk51Q9_w"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeh-KwEe6ilNAKM5u3Mg" name="American Express Card Number" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeiOKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeieKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/American_Express_Card_Number_0.1.pattern#_FcDG0D17Ed2p44yVAaDvbQ"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeiuKwEe6ilNAKM5u3Mg" name="Bank Routing Transit Number (RTN)" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYei-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYejOKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Bank_Routing_Transit_Number__RTN__0.1.pattern#_j5FFMIydEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYejeKwEe6ilNAKM5u3Mg" name="Contains numbers" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYejuKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYej-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Contains_numbers_0.1.pattern#_Lnh0kGUuEd2RuP05jDphQg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYekOKwEe6ilNAKM5u3Mg" name="FR SSN" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYekeKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYekuKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/FR_SSN_0.1.pattern#_OuO-UPbPEd2c5L1gaJyUtQ"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYek-KwEe6ilNAKM5u3Mg" name="GPS Coordinate" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYelOKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeleKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/GPS_Coordinate_0.1.pattern#_Xaq7AECwEeWDcpMk51Q9_w"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeluKwEe6ilNAKM5u3Mg" name="ISBN 13 Checker" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYel-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYemOKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/ISBN_13_Checker_0.1.pattern#_C9oU8GaVEeWlkevoEbik2g"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYemeKwEe6ilNAKM5u3Mg" name="ISBN Checker" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYemuKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYem-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/ISBN_Checker_0.1.pattern#_WGxL4IydEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYenOKwEe6ilNAKM5u3Mg" name="International Passport" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeneKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYenuKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/International_Passport_0.1.pattern#_PRL0IIydEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYen-KwEe6ilNAKM5u3Mg" name="Istat Code" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeoOKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeoeKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Istat_Code_0.1.pattern#_ZYFdkIybEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeouKwEe6ilNAKM5u3Mg" name="Longitude Validation" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeo-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYepOKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Longitude_Validation_0.1.pattern#_CwBEgIybEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYepeKwEe6ilNAKM5u3Mg" name="Master Card Number" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYepuKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYep-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Master_Card_Number_0.1.pattern#_6YWv4D16Ed2p44yVAaDvbQ"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeqOKwEe6ilNAKM5u3Mg" name="Non Zero 1st Digit" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeqeKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYequKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Non_Zero_1st_Digit_0.1.pattern#_D7IDEAulEeKxJpyXB0egyQ"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeq-KwEe6ilNAKM5u3Mg" name="Numeric" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYerOKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYereKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/Numeric_0.1.pattern#_OAAOQD1iEd2irYhnXOOajA"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeruKwEe6ilNAKM5u3Mg" name="UK SSN" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYer-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYesOKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/UK_SSN_0.1.pattern#_C2aDMECkEeWDcpMk51Q9_w"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeseKwEe6ilNAKM5u3Mg" name="UK Vehicle Registration Plate Number Plate" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYesuKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYes-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/UK_Vehicle_Registration_Plate_Number_Plate_0.1.pattern#_8U2icIybEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYetOKwEe6ilNAKM5u3Mg" name="US SSN" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeteKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYetuKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/number/US_SSN_0.1.pattern#_BpSRwD15Ed2p44yVAaDvbQ"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYet-KwEe6ilNAKM5u3Mg" name="FR Phone Number" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeuOKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeueKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/FR_Phone_Number_0.1.pattern#_SPiUIPbKEd2c5L1gaJyUtQ"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeuuKwEe6ilNAKM5u3Mg" name="FR Phone Number (Local or International )" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeu-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYevOKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/FR_Phone_Number__Local_or_International___0.1.pattern#_DqoD4IyhEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeveKwEe6ilNAKM5u3Mg" name="International phone number" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYevuKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYev-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/International_phone_number_0.1.pattern#_Is95MIydEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYewOKwEe6ilNAKM5u3Mg" name="Mobile number of India" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeweKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYewuKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/Mobile_number_of_India_0.1.pattern#__RSB4IycEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYew-KwEe6ilNAKM5u3Mg" name="Phone Brazil" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYexOKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYexeKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/Phone_Brazil_0.1.pattern#_mRzFgIycEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYexuKwEe6ilNAKM5u3Mg" name="Phone Number" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYex-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYeyOKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/phone/Phone_Number_0.1.pattern#_S7m6oIyhEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYeyeKwEe6ilNAKM5u3Mg" name="Blank text" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYeyuKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYey-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Blank_text_0.1.pattern#_N7yi0Gk3Ed2I1bT57-sHUw"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYezOKwEe6ilNAKM5u3Mg" name="Empty text" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYezeKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYezuKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Empty_text_0.1.pattern#_vZ6_IGk6Ed2I1bT57-sHUw"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYez-KwEe6ilNAKM5u3Mg" name="Home Row Text" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYe0OKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYe0eKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Home_Row_Text_0.1.pattern#_e4vUoYyZEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYe0uKwEe6ilNAKM5u3Mg" name="Linux Path Verify" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYe0-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYe1OKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Linux_Path_Verify_0.1.pattern#_IqpTEIyfEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYe1eKwEe6ilNAKM5u3Mg" name="No special chart" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYe1uKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYe1-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/No_special_chart_0.1.pattern#_6rm3QIycEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYe2OKwEe6ilNAKM5u3Mg" name="Random sequence of text" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYe2eKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYe2uKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Random_sequence_of_text_0.1.pattern#_gDqDcP9eEd2mwaQf90ozSg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYe2-KwEe6ilNAKM5u3Mg" name="Starts with blank" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYe3OKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYe3eKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Starts_with_blank_0.1.pattern#_18GtIIyaEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYe3uKwEe6ilNAKM5u3Mg" name="Starts with space" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYe3-KwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYe4OKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Starts_with_space_0.1.pattern#_scYqYIyaEd6Dle_8xC0lwg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYe4eKwEe6ilNAKM5u3Mg" name="Starts with uppercase" count="500" computed="true" validRow="true" matchingValueCount="500">
        <parameters xmi:id="_WBYe4uKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYe4-KwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Starts_with_uppercase_0.1.pattern#_53rX8AMvEeKk6OZDw5mXOQ"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYe5OKwEe6ilNAKM5u3Mg" name="Uppercased Single Word" count="500" computed="true" validRow="true" matchingValueCount="500">
        <parameters xmi:id="_WBYe5eKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYe5uKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/text/Uppercased_Single_Word_0.1.pattern#_FyTwIHnTEd2weu9skTiCqA"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
      <indicators xsi:type="dataquality.indicators:RegexpMatchingIndicator" xmi:id="_WBYe5-KwEe6ilNAKM5u3Mg" name="BE Code postal" count="500" computed="true" inValidRow="true" notMatchingValueCount="500">
        <parameters xmi:id="_WBYe6OKwEe6ilNAKM5u3Mg">
          <dataValidDomain xmi:id="_WBYe6eKwEe6ilNAKM5u3Mg">
            <patterns href="../../../TDQ_Libraries/Patterns/Regex/address/BE_Code_postal_0.1.pattern#_NwUnsD4LEd20H7qFpzB9dg"/>
          </dataValidDomain>
        </parameters>
        <analyzedElement xsi:type="TalendMetadata:MetadataColumn" href="../../../metadata/fileDelimited/ff_us_data_0.1.item#_I1pR6eKvEe6ilNAKM5u3Mg"/>
        <indicatorDefinition href="../../../TDQ_Libraries/Indicators/System Indicators/Pattern Matching/Regular_Expression_Matching_0.1.definition#_yb-_8Dh8Ed2XmO7pl5Yuyg"/>
      </indicators>
    </results>
    <parameters xmi:id="_Y_x-OeKvEe6ilNAKM5u3Mg" dataFilter="_lzbP1-KvEe6ilNAKM5u3Mg" analysisType="Multiple Column Analysis" executionLanguage="Java"/>
    <contextType xmi:id="_lzaowOKvEe6ilNAKM5u3Mg" confirmationNeeded="false" hide="false" name="Default"/>
  </dataquality.analysis:Analysis>
  <orgomg.cwm.objectmodel.core:Dependency xmi:id="_b0oZgOKxEe6ilNAKM5u3Mg" kind="Usage" supplier="_Y_x-MOKvEe6ilNAKM5u3Mg">
    <client xsi:type="dataquality.reports:TdReport" href="../../Reports/profile_address_0.1.rep#_9yxvcOKwEe6ilNAKM5u3Mg"/>
  </orgomg.cwm.objectmodel.core:Dependency>
  <dataquality.domain:Domain xmi:id="_lzbP1-KvEe6ilNAKM5u3Mg" name="col_analysis">
    <ranges xmi:id="_lzbP2OKvEe6ilNAKM5u3Mg">
      <expressions xmi:id="_lzbP2eKvEe6ilNAKM5u3Mg">
        <expression xsi:type="relational:TdExpression" xmi:id="_lzbP2uKvEe6ilNAKM5u3Mg" body="" language="SQL"/>
      </expressions>
    </ranges>
  </dataquality.domain:Domain>
</xmi:XMI>
